<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[eternitrance]]></title><description><![CDATA[Just a foolish coder's space.]]></description><link>https://blog.tocz9ea.com</link><generator>GatsbyJS</generator><lastBuildDate>Sun, 08 Nov 2020 11:39:47 GMT</lastBuildDate><item><title><![CDATA[Hackergame 2020 Writeup]]></title><description><![CDATA[手痒，花半天玩了下，剩下的就都卡住了。 做了签到、2048、一闪而过的 Flag、从零开始的记账工具人、233 同学的 Docker 签到 e4PJzv 打开题目，能看见这样的一个页面，包括一个可拖拽 range 和一个提取 button。那我们现在可做的是，拖拽 range…]]></description><link>https://blog.tocz9ea.com/hackergame-2020-writeup/</link><guid isPermaLink="false">https://blog.tocz9ea.com/hackergame-2020-writeup/</guid><pubDate>Sun, 08 Nov 2020 17:54:44 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;手痒，花半天玩了下，剩下的就都卡住了。&lt;/p&gt;
&lt;p&gt;做了签到、2048、一闪而过的 Flag、从零开始的记账工具人、233 同学的 Docker&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;签到&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/e4PJzv.png&quot; alt=&quot;e4PJzv&quot;&gt;&lt;/p&gt;
&lt;p&gt;打开题目，能看见这样的一个页面，包括一个可拖拽 range 和一个提取 button。那我们现在可做的是，拖拽 range 到 1？&lt;/p&gt;
&lt;p&gt;那么恭喜你，将触发一个“没想到吧！”的 &lt;code class=&quot;language-text&quot;&gt;console.log()&lt;/code&gt;，生怕你没有被惊喜到。再看看源代码？&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 也就是说，如果 range 为 1，则触发一个 log，和值的修改。所以别费力拖和用方向键了...&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;#number&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;没想到吧!&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;#number&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.00001&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;prevVal &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.00001&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;#number&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.99999&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;prevVal &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.99999&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;#number&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.00001&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;俗话说，万事先试，不试怎知？欲知后事如何，点下提取试试？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/mbe8P2.png&quot; alt=&quot;mbe8P2&quot;&gt;&lt;/p&gt;
&lt;p&gt;看到 URL 了吧，出题者也怕难为各位的眼神了，故意摆了个 number 的 query？&lt;/p&gt;
&lt;p&gt;不改怎么知道是不是故意的，修改为 &lt;code class=&quot;language-text&quot;&gt;?number=1&lt;/code&gt; 后回车。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/RI1NzD.jpg&quot; alt=&quot;RI1NzD&quot;&gt;&lt;/p&gt;
&lt;p&gt;欧了，结束本题。&lt;/p&gt;
&lt;h2&gt;2048&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/w3Jj2R.png&quot; alt=&quot;w3Jj2R&quot;&gt;&lt;/p&gt;
&lt;p&gt;打开题目后，我先玩了几把 2048，但是由于太菜了始终没有靠实力解题XDDDD…&lt;/p&gt;
&lt;p&gt;不过我想，这题如果真的是考游戏能力的话，应该不会归类到 Web 吧，于是二话不说，打开看看源代码先？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/CFWZnK.png&quot; alt=&quot;CFWZnK&quot;&gt;&lt;/p&gt;
&lt;p&gt;嗯，HTML 写的挺工整。不过都 0202 年了，还有人会把 changelog 注释在这？&lt;/p&gt;
&lt;p&gt;为了满足下好奇心，打开这个文件，看看它到底修复了啥。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/pvvCwy.png&quot; alt=&quot;pvvCwy&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 你细品，这个赢法也太 bug 了吧，就这还写 changelog...&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;won&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/getflxg?my_favorite_fruit=&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;b&apos;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;a&apos;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;a&apos;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;a&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/getflxg?my_favorite_fruit=&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所以我就假装赢了，把上面这个 url 贴进去看看。&lt;/p&gt;
&lt;p&gt;对了，要是不知道这个 &lt;code class=&quot;language-text&quot;&gt;toLowerCase()&lt;/code&gt; 的结果是啥，带到 Console 里跑一下就清楚了。不过之前貌似在微博看过这类梗，所以上手直接就是一个 banana。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/dju7Cm.jpg&quot; alt=&quot;dju7Cm&quot;&gt;&lt;/p&gt;
&lt;h2&gt;一闪而过的 Flag&lt;/h2&gt;
&lt;p&gt;这题的 Bug 之处，是点击下载后，是一个 .exe 文件…&lt;/p&gt;
&lt;p&gt;当时手头没有 Windows 系统，所以下次，请出题者好好考虑一下卑微的 macOS 用户。&lt;/p&gt;
&lt;p&gt;找来了个 Windows 10，你可以使用 xbox 的屏幕录像，也可以用手机拍视频。&lt;/p&gt;
&lt;p&gt;反正条条大路通罗马，不管是优雅的城镇路，还是破土路，它都是路。&lt;/p&gt;
&lt;p&gt;（鉴于我手头又没有 Windows 环境了，所以各位脑补下结果。&lt;/p&gt;
&lt;p&gt;（对了，要区分好 &lt;code class=&quot;language-text&quot;&gt;i&lt;/code&gt;、&lt;code class=&quot;language-text&quot;&gt;l&lt;/code&gt;、&lt;code class=&quot;language-text&quot;&gt;I&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;1&lt;/code&gt;，你可以用火眼金睛，也可以讨巧地修改下 cmd 的字体。总之随便你，只要你填对了 flag，就牛逼。&lt;/p&gt;
&lt;h2&gt;从零开始的记账工具人&lt;/h2&gt;
&lt;p&gt;本来以为一个 Excel 表格有啥难度，但是打开就懵了。&lt;/p&gt;
&lt;p&gt;原来金额大写的那堆单元格，不是数字直接设置样式渲染的，而是份量很足的、真实的中文大写金额文字…&lt;/p&gt;
&lt;p&gt;好吧，先找了个 JS 金额大写转小写的脚本，再找了个空行转数组的工具。一手进，一手出。&lt;/p&gt;
&lt;p&gt;后面再把输出的数字们贴回去 Excel 里，乘上数量再算个 SUM，结果就出来了。&lt;/p&gt;
&lt;p&gt;（我这个是傻办法，Node 一把梭更简单，当时脑袋没开光 😀️&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于时间原因，后续的代码啥的之后补上，但也有可能就 🕊️ 了，这些都 谷饹 / 拜度 得到。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;233 同学的 Docker&lt;/h2&gt;
&lt;p&gt;这道题困了很久，一直的思路是如何把 &lt;code class=&quot;language-text&quot;&gt;/bin/sh -c rm /code/flag.txt&lt;/code&gt; 这层 layer 删除，但是看了很久，没有这种解决方法。&lt;/p&gt;
&lt;p&gt;但我在一遍又一遍的重新拉取中，察觉到每层 layer 都是需要下载并在本地做 diff 的，这就说得通了，可能这个文件还缓存在某个角落。&lt;/p&gt;
&lt;p&gt;于是我开始了下面这行操作：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; / -name flag.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;会发现有两个符合的文件，接着一个个 &lt;code class=&quot;language-text&quot;&gt;cat&lt;/code&gt; 就好。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/mtrJky.jpg&quot; alt=&quot;mtrJky&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;这些题目严格意义上，不算是正经的 CTF。（正经 CTF 可比这个无聊多了）&lt;/p&gt;
&lt;p&gt;玩完这些，看看 dalao 们的 WriteUp。&lt;/p&gt;
&lt;p&gt;我只能说：&lt;/p&gt;
&lt;p&gt;我不敢了… 下次还来！&lt;/p&gt;</content:encoded></item><item><title><![CDATA[浅谈信用卡中的生活]]></title><description><![CDATA[When and why…]]></description><link>https://blog.tocz9ea.com/credit-card-in-my-life/</link><guid isPermaLink="false">https://blog.tocz9ea.com/credit-card-in-my-life/</guid><pubDate>Sat, 17 Oct 2020 13:49:00 GMT</pubDate><content:encoded>&lt;h2&gt;When and why?&lt;/h2&gt;
&lt;p&gt;我办理的第一张信用卡，正值校园贷被穷追猛打之时，那时候我大二。当时为了规范学生合理使用信贷，部分银行陆续开放学生信用卡业务。某行因为有较高的授信额度、相对方便的办理成本，和后续卡成长空间不俗等原因，自然进入到考虑范围内。从在线申请、审核、下卡，到最后开卡，速度大约两到三周，开通额度也比较轻松。从那时候开始，我就开始习惯通过信用卡解决日常消费，将生活费存到具有微利的各种货币基金平台上。卡的使用范围很广，基本可以替代之前使用花呗的各种场景。&lt;/p&gt;
&lt;p&gt;在考虑办卡之前，我有思考过为什么要用，并权衡之间的便利和风险。&lt;/p&gt;
&lt;p&gt;首先，从账单日到还款日之间的40天，可以按月拿到两个月的生活费，看着多，可支配的空间也多。其次，因为支付和退款仅与额度相关，能及时和便利的查看结构性账单，其他的现金转账可以单独归类到一个支付平台管理。最后，如果有免息分期的商品，能考虑商品一次性消费与分期消费的还款压力，进一步通过拉大时间跨度，增加可支出消费的数额。&lt;/p&gt;
&lt;p&gt;从风险的角度看，主要取决于你的还款能力，包括如何计算和控制手上的现金流出，对必要还款部分（分期商品）的留存金意识等。如果能做到这个，其实根本不算有风险。&lt;/p&gt;
&lt;h2&gt;Tips and warns&lt;/h2&gt;
&lt;p&gt;写这篇文章的时候，正好看到一条微博有关免息分期的讨论，评论中凸显人们对于信用卡的偏见。很多人没有理财意识，更缺乏对现金与额度之间关系的考虑。我把当时写的转发内容贴在下面，并作补充。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不管是学生党还是社畜，没钱、没自制力，别碰信用卡，别分期；&lt;/li&gt;
&lt;li&gt;对于社畜来说，分期是预见工资中可消费部分有剩余的情况下进行的，无息分期越久越划算；&lt;/li&gt;
&lt;li&gt;分期后剩余的现金，投资基金不香吗？&lt;/li&gt;
&lt;li&gt;分期商品可以按商品金额等自行调整数量，自己要有能力权衡每月现金支出情况，如果商品数量多需考虑自行记录分期数、每期应还等。&lt;/li&gt;
&lt;li&gt;除信用卡外的任何小额贷都有征信记录风险（包括花呗、白条）&lt;/li&gt;
&lt;li&gt;忘记还款不会出事，大部分银行有宽限期（招行宽限期3天）。如果真的忘性大，除了仔细咨询客服有关征信是否影响，并及时主动还款外，还是销卡最不容易忘了。（还款也能忘，你啥忘不了？）&lt;/li&gt;
&lt;li&gt;信用卡对于生活消费的优惠力度，有时比美团口碑还要大。（例如招行的周三半价饭票、交行的最红星期五…）&lt;/li&gt;
&lt;li&gt;在支付宝，你的日常消费最多是没有啥用处的积分；而在信用卡，日常消费产生的积分，能用的方面更直接、更广。（以星巴克举例：招行 799 积分可兑换中杯、中信 / 中行 / 交行等亦有活动）&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请记住，信用卡从账单日开始，到下个月还款日间最多是40天；而花呗只有还款日，固定最多是30天。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;假设某张信用卡的账单日为每月18号，还款日为每月6号。在1月19日购买的商品，2月18日出账单，3月6日前还款即可。&lt;/li&gt;
&lt;li&gt;假设花呗还款日为每月20号，还款中的淘宝消费，取决于确认收货时间。在1月18日点击收货，还款日为1月20日；在1月21日点击收货，还款日为2月20日。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果之前你能轻松还款，现在却被信用卡牵着鼻子走，这是徒增压力。建议同 (1.)，最好别碰信用卡了。&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[最近在学啥？]]></title><description><![CDATA[CS50 由于自己确实没有经过正经的软工或者计科教学，在一些基础认知上，可能还需要正确地理解与强化，加上自己从初中以来的各种经验，我选择了 Harvard 的 CS5…]]></description><link>https://blog.tocz9ea.com/what-have-i-been-learning/</link><guid isPermaLink="false">https://blog.tocz9ea.com/what-have-i-been-learning/</guid><pubDate>Sun, 13 Sep 2020 00:50:48 GMT</pubDate><content:encoded>&lt;h2&gt;CS50&lt;/h2&gt;
&lt;p&gt;由于自己确实没有经过正经的软工或者计科教学，在一些基础认知上，可能还需要正确地理解与强化，加上自己从初中以来的各种经验，我选择了 Harvard 的 CS50 作为入门课程来学习。在学习之中也在各种查缺补漏，尤其是数据结构和算法上，可能还是需要通过对过程的细化来深刻理解不同点和优缺点。起码之前看各种图解没有厘清的各种排序，在课上算是以一个循序渐进的方式明白了，这应该算是进步吧？&lt;/p&gt;
&lt;p&gt;目前正在以两周一章的进度学习着，希望能不拖到年尾，并且做完 Final Project，拿一个 Certification 吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅️ Week 0 Scratch 😺 (07/12)&lt;/li&gt;
&lt;li&gt;✅️ Week 1 C (07/20)&lt;/li&gt;
&lt;li&gt;✅️ Week 2 Arrays (08/26)&lt;/li&gt;
&lt;li&gt;✅️ Week 3 Algorithms (09/08)&lt;/li&gt;
&lt;li&gt;✅️ Week 4 Memory (09/22)&lt;/li&gt;
&lt;li&gt;Week 5 Data Structures&lt;/li&gt;
&lt;li&gt;Week 6 Python 🐍&lt;/li&gt;
&lt;li&gt;Week 7 SQL&lt;/li&gt;
&lt;li&gt;Week 8 Information&lt;/li&gt;
&lt;li&gt;Final Project&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://cs50.harvard.edu/x/2020/&quot;&gt;https://cs50.harvard.edu/x/2020/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Full stack open 2020&lt;/h2&gt;
&lt;p&gt;作为一个靠前端吃饭的卑微 Coder，空余时间再不学些东西，就要被后浪们打趴下了。Vue 确实是个学习成本不高的框架，但是在写业务的过程中越来越心累，所以总想着空余时间不能再写 Vue 了（好像朋友圈的广告也都是 Vue 😂️）。正好在很多渠道里看见了芬兰赫尔辛基大学的这门课程，React + Redux + Node.js + MongoDB + GraphQL 的组合看的我实在高兴。相比于每个技术攻破，这样的学习方式就很有意思，part 与 part 之间也会有良好地衔接与过渡。&lt;/p&gt;
&lt;p&gt;不同于 Vue 的自封装语法（v-for, v-if），React 与 JavaScript 的结合一向紧密，这就在学习的时候顺便再巩固下原生 JS，简直是太适合不过了！&lt;/p&gt;
&lt;p&gt;目前也是以 ‘two weeks per part’ 的速度学习，希望学完之后，自己的 🥣️ 能再大一点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅️ Part 0 - Fundamentals of Web apps (07/10)&lt;/li&gt;
&lt;li&gt;✅️ Part 1 - Introduction to React (08/24)&lt;/li&gt;
&lt;li&gt;✅️ Part 2 - Communicating with server (09/16)&lt;/li&gt;
&lt;li&gt;✅️ Part 3 - Programming a server with NodeJS and Express (09/18)&lt;/li&gt;
&lt;li&gt;👉️ Part 4 - Testing Express servers, user administration&lt;/li&gt;
&lt;li&gt;Part 5 - Testing React apps&lt;/li&gt;
&lt;li&gt;Part 6 - State management with Redux&lt;/li&gt;
&lt;li&gt;Part 7 - React router, custom hooks, styling app with CSS and webpack&lt;/li&gt;
&lt;li&gt;Part 8 - GraphQL&lt;/li&gt;
&lt;li&gt;Part 9 - Typescript&lt;/li&gt;
&lt;li&gt;Part 10 - React Native&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://fullstackopen.com/&quot;&gt;https://fullstackopen.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;之后会学啥？&lt;/h2&gt;
&lt;p&gt;下面的内容有些是只会基础运用，但是活用并且精进才是最终目的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://cs61a.org/&quot;&gt;CS 61A: Structure and Interpretation of Computer Programs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Data Structures and Algorithms&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pingcap/awesome-database-learning&quot;&gt;Awesome Database Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Computer Networking&lt;/li&gt;
&lt;li&gt;Operating Systems&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Hello world, again!]]></title><description><![CDATA[为什么要换博客系统 其实 Hexo 一直以来都挺好用的。对于不喜欢笨重的 WordPress 来说，它能够非常轻量地准备一个环境。除了折腾主题和文章外，你只需要编译成静态页面，再选择一个 Page 服务或者 deploy platform…]]></description><link>https://blog.tocz9ea.com/hello-world-again/</link><guid isPermaLink="false">https://blog.tocz9ea.com/hello-world-again/</guid><pubDate>Sun, 06 Sep 2020 21:47:03 GMT</pubDate><content:encoded>&lt;h2&gt;为什么要换博客系统&lt;/h2&gt;
&lt;p&gt;其实 &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt; 一直以来都挺好用的。对于不喜欢笨重的 WordPress 来说，它能够非常轻量地准备一个环境。除了折腾主题和文章外，你只需要编译成静态页面，再选择一个 Page 服务或者 deploy platform 部署即可，不需要像以前一样准备服务器环境。在编译速度和编译可靠性上，它也算的上数一数二了，总的来说没有太大的短板。&lt;/p&gt;
&lt;p&gt;但这对于一个前端er来说，并不算是一个终极选择。由于自己本身使用的技术栈不在于此，也不想深入地理解源码，所以也无法过度地改造和发挥。假如要创建新的页面做其他展示，除了简单的创建 Markdown 文件来生成外，也没有兴趣了解其他的方式。&lt;/p&gt;
&lt;p&gt;也可能是自己框架用多了，所以更倾向于使用例如 VuePress、Gridsome、Gatsby 等等诸如此类的博客系统。它们能让开发者使用的 API，不仅仅是框架原有可以发挥的，还可以是基于博客属性再封装的。两种维度的开发方法，我也省了心去理解这个博客系统内核的源码，就像是夏天脱了件厚外套一样舒服。&lt;/p&gt;
&lt;p&gt;不过这种方式编译后的结果，比起之前 Hexo，从直接查看源代码来看复杂不少，且可能会出现框架或路由本身所导致的 Bug。不过这些都不重要，折腾就完事了。&lt;/p&gt;
&lt;h2&gt;最近要更什么&lt;/h2&gt;
&lt;p&gt;想了想自己在工作中，基于业务所开发的功能没啥好说的，顶多复盘一下自己踩过的坑。但是毕竟自己下班后还是会学习（和 ✋️🐟️）的，就可以围绕着 X 后感这件事来说些啥。所以准备了两个选题，之后会更（吧？ / 的。）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;浅谈信用卡中的生活&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;项目中抽取公用模块，真的就易于维护了？&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[逃离云音乐]]></title><description><![CDATA[逃离 大概是 201…]]></description><link>https://blog.tocz9ea.com/escape-netease-music/</link><guid isPermaLink="false">https://blog.tocz9ea.com/escape-netease-music/</guid><pubDate>Sun, 16 Feb 2020 17:38:50 GMT</pubDate><content:encoded>&lt;h2&gt;逃离&lt;/h2&gt;
&lt;p&gt;大概是 2018 年开始，就有打算地从云音乐撤离。那时候，东缺西补的版权状态已经持续了一段时间，周杰伦的歌曲下架事件让我觉得不妙。只要看清云音乐的主业是社交而不是音乐，对未来可能会出现版权未及时续约的情况，应该不会感觉惊讶。&lt;/p&gt;
&lt;p&gt;这件事情发生后，我开始对比一些海内外的流媒体平台。下面是当时所作的一些分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Netease Music&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：社交属性强，华语日韩欧美曲库较全，智慧推荐较强&lt;/li&gt;
&lt;li&gt;缺点：社交属性强到过头，非会员曲库数量愈发减少&lt;/li&gt;
&lt;li&gt;ps: 新版某宝 88 会员，可以网易云 / 虾米 二选一了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;QQ Music&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：曲库国内最强&lt;/li&gt;
&lt;li&gt;缺点：无法逃出当年三巨头的阴影，对版权近乎掌握的行为无法为伍&lt;/li&gt;
&lt;li&gt;ps: 虽然可以看不惯并且不用QQ音乐，但是不能看不惯微信而不用微信，（顺带一起喷下这个辣鸡玩意儿&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Xiami Music&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：曲库数量和社交属性恰到好处，赠送的会员遍地开花（现在可能不是了&lt;/li&gt;
&lt;li&gt;缺点：软件平庸，曲库平庸，APP 也提不起兴趣&lt;/li&gt;
&lt;li&gt;ps: 在网易云还没出现，QQ音乐也不喜欢的日子里，虾米的氛围是很舒服的。当年开发的 Loop，推荐了很多一般不触碰的好音乐。现在已经完全变了味道，成为一个平庸的产品，就和优土一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;酷狗 / 酷我 / 百度音乐…&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：对适合找伴奏 / 能听就行的人来说应该不错&lt;/li&gt;
&lt;li&gt;缺点：酷狗尴尬的提示音、曲库质量不太好描述、感觉是时代的眼泪&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Apple Music&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：使用门槛低（相较于其他海外流媒体平台）、欧美曲库质量和数量上乘、官方歌词覆盖较全面&lt;/li&gt;
&lt;li&gt;缺点：仅支持付费订阅、地区限制导致曲库不均、过于依赖 Apple 装置（貌似 Android APP 一言难尽）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Spotify&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：支持免费版与付费订阅、曲库质量和数量上乘、官方歌单质量高、智慧推荐不俗、Spotify Connect 灵活切换播放装置&lt;/li&gt;
&lt;li&gt;缺点：只有某些区域有歌词显示且不完善&lt;/li&gt;
&lt;li&gt;ps: 开始着力于 Podcast 了！这是个好方向，但是功能还需要再加强下。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Youtube Music&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：某些地区曲库数量惊人、Android 用户使用性良好、&lt;/li&gt;
&lt;li&gt;缺点：仅支持单线上装置，不清楚对 iOS 装置是否友好&lt;/li&gt;
&lt;li&gt;ps: 应该是 Play Music 用户不多吧，Google 又把它关了…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个平台在后来发生了一堆「改变」，云村进一步地提高社交活性：使用低质量短影片恶心使用者、黑胶会员变得无处不在、社交内容质量下降（歌曲评论区的留言让我哭笑不得）…&lt;/p&gt;
&lt;p&gt;再之后，&lt;strong&gt;Cigarette After Sex&lt;/strong&gt; 变成了 &lt;strong&gt;CAS&lt;/strong&gt;，&lt;strong&gt;Norman Fucking Rockwell!&lt;/strong&gt; 变成了 &lt;strong&gt;Norman ****ing Rockwell!&lt;/strong&gt;，&lt;a href=&quot;https://www.zhihu.com/question/325247072/answer/689993677&quot;&gt;&lt;strong&gt;如何看待藏无尤说网易云音乐帮独立音乐人数据作假？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;过渡&lt;/h2&gt;
&lt;p&gt;分析之后，最后选择了 Spotify 作为主力使用的流媒体平台。在没导入歌单之前，我先把想听的歌曲和专辑收藏，再使用了一段时间。在体验中，免费版虽然会在歌曲间新增广告，但个人觉得能够接受。Spotify Connect 的功能比较易用，可以在手机、电脑、蓝牙等装置间轻松地切换播放装置，并同步当前播放内容。&lt;/p&gt;
&lt;p&gt;之后就有将云音乐的歌单汇入到 Spotify 的需求，这个需要通过 TemperMonkey 安装相关外挂，从网页版云音乐导出文字版歌单后，通过 &lt;a href=&quot;https://www.spotlistr.com/&quot;&gt;Spotlistr&lt;/a&gt; 把文字版歌单批量导出，具体过程不赘述，可以自行搜寻相关教程。&lt;/p&gt;
&lt;p&gt;最后，通过 Spotify 的智慧歌单，也可以通过类似云音乐的方法过滤出自己的音乐偏好，之后推荐的歌不仅更加 neat，官方的优质歌单也是一个很好的补充，整个逃离工作就差不多了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;20.09.05 补充
上面提到了有关 Spotify 添加了 Podcast 功能。自从加了这个之后，通勤有了更多选择，也不纠结应该循环哪张专辑了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;（目前手机上还会备着云音乐，但是使用的次数已经寥寥无几了。）&lt;/p&gt;</content:encoded></item><item><title><![CDATA[My Favorites, in 2019]]></title><description><![CDATA[…]]></description><link>https://blog.tocz9ea.com/my-favorites-in-2019/</link><guid isPermaLink="false">https://blog.tocz9ea.com/my-favorites-in-2019/</guid><pubDate>Tue, 31 Dec 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;根据一份「样本数」少，但几乎每个「样本」都在反馈的观点：这是个大家都不想面对和回首的年。&lt;/p&gt;
&lt;p&gt;年初缩招，年中将就入职，年末被欠薪，我其实一点都不想回头看。既然不想面对生活的「处处碰壁」，那就看看这个年都快过去了，我还喜欢些啥，哪怕一点也好。&lt;/p&gt;
&lt;h2&gt;🎵️ 音乐&lt;/h2&gt;
&lt;p&gt;我在几个月前还深切认为着，自己所处的地方是个没什么精神粮食的艺文沙漠。直到上周日，在本地听了一场 live 后才稍微有所改观：原来我这个「老头子」，还是能不用到处奔波，就可以同一群小年轻们蹦蹦跳跳。那个晚上，台上的主唱觉得这里的司机还挺能唠磕。本来不以为然的我，就在散场叫计程车的时候，和司机唠了一路，唠了很多。六十多的车资，差不多算是大半场 live 的票钱，虽然是一场「拼盘演出」，不过总的来说表现都很精彩，还是觉得值回了票价。&lt;/p&gt;
&lt;p&gt;扯回到今年听的这些杂七杂八的歌，这是自初中以来，尝试接触台湾专辑最多的一年。不管是流行还是独立，只要是喜欢，就会把整张专辑听下来。在通勤的那段无聊时光里，除了看看演算法，背景就放些专辑什么的，也还蛮👌️的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有效专辑样本数：30+&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;电台拾遗&lt;/h3&gt;
&lt;p&gt;上高中前的那几年，晚上会在基本四面都是墙的小房间里听电台，收讯时好时坏，那时候就都听欧美（ps: 一点也看不上那时候的华语流行） 。现在能捡起来这个，是在机缘巧合下被安利了「听说」（全二季）。重复看了两三次后，就直接去翻找相关电台节目的资源。&lt;/p&gt;
&lt;p&gt;目前的国内电台，能找来歌手打歌、对专辑访谈的节目越来越少。更多的听者在忙碌中，疲于了解创作人在孕育专辑期间的心路历程，而选择单刀直入地寻找音乐与自身生活间的音韵和谐（亦或者是共鸣）。当然前面所述，也无关对错，但如果在电台上，听过主持人与创作人之间的相互交谈，甚至是艺人在空中电波上的小型现场，相信会更加深刻地了解创作者和作品，也还能在访谈中挖掘一些小「彩蛋」，挺好。&lt;/p&gt;
&lt;p&gt;记得昨晚看 live 时，主唱问观众是如何知道所在的乐团，其中不乏喊出单曲名称和流媒体平台名称的。不过在马芳老师&lt;sup id=&quot;fnref-1&quot;&gt;&lt;a href=&quot;#fn-1&quot; class=&quot;footnote-ref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;的电台上，我是听到那些「土法炼钢」的创作故事和空中现场的精彩演出&lt;sup id=&quot;fnref-2&quot;&gt;&lt;a href=&quot;#fn-2&quot; class=&quot;footnote-ref&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;后，才决定期待他们的新专辑。&lt;/p&gt;
&lt;p&gt;对了，在某打分平台上，经常会看到拿某乐团与草东或万青相比较的言论。对于这些言论，只需一笑而过即可。&lt;/p&gt;
&lt;h3&gt;心水专辑 / 单曲&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;依旧是林生祥老师操刀电影「阳光普照」的配乐与主题曲，「远行」&lt;sup id=&quot;fnref-3&quot;&gt;&lt;a href=&quot;#fn-3&quot; class=&quot;footnote-ref&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;给人的感觉就像是处在略微风起时，吹散遮蔽于阳光下一块阴云，很喜欢这种感觉。&lt;/li&gt;
&lt;li&gt;去年多产的升哥，今年不意外地带来了新专辑「七天」&lt;sup id=&quot;fnref-4&quot;&gt;&lt;a href=&quot;#fn-4&quot; class=&quot;footnote-ref&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;。在某平台上也说过，有生之年必须要去台北听一次跨年专场。&lt;/li&gt;
&lt;li&gt;杨乃文今年也出了新专辑&lt;sup id=&quot;fnref-5&quot;&gt;&lt;a href=&quot;#fn-5&quot; class=&quot;footnote-ref&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;，突然唱慢歌的她也让我感觉意外。不过回顾了那张「SILENCE」之后，还是更喜欢老专辑一点。（正如青峰所说，封面真好看）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;金曲 or 金音？ 我全都要！&lt;/h3&gt;
&lt;p&gt;如果说金曲是华语流行的风向标之一，那么金音则是台湾独立乐坛的重头戏。金曲暂且不提，毕竟能获奖的都算实至名归。金音里的很多入围曲目都是宝藏，建议寻找相关歌单&lt;sup id=&quot;fnref-6&quot;&gt;&lt;a href=&quot;#fn-6&quot; class=&quot;footnote-ref&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;并从中「淘宝」吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;金曲奖的遗珠之憾 - 「垂直活着，水平留恋着」&lt;/p&gt;
&lt;p&gt;这张专辑的「标签」是一种很明显的「丧」，但听完之后又像是获得了一种解脱。情绪的把控更加游刃有余的同时，艾怡良的嗓音又是具有强辨识性的。同样需要留心的是编曲，效果确实惊艳。前几天在社交平台上看了一段现场的 live 影片，她在新生代的台湾歌手里面，算是没什么太大短板的了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;金曲奖的哀喜并存 - 「0」&lt;/p&gt;
&lt;p&gt;听完这张专辑，我什至不相信 Sandy 已经是 5 开头岁数的艺人了。嗓音能够保养到这种近乎完美的程度，真的令人佩服。专辑在艺术表现上很超前，某平台上说这更像是实验性作品。词的题材在抽象与现实议题之间突兀跳跃，整体的曲风感觉也想走空灵的格调，缺乏多样性。尤其是「沙文」的感觉又与其他曲目不搭，最终导致这张专辑已经很久没再翻出来听了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从金音单曲奖 到最心水专辑 - 「给天王星」&lt;/p&gt;
&lt;p&gt;继去年通过一些方法拿到了 anpu 的现场专辑后，今年依旧想再买一张专辑。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;专辑要到了，等到了再补充？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;欧美&lt;/h3&gt;
&lt;p&gt;今年欧美流行听的不多，除了照常听打雷、酷玩、Taylor 的年专，最主要是多听了 Billie Eilish 的新专。但不知道为何，我无感。&lt;/p&gt;
&lt;p&gt;样本数不多，没有话语权，明年继续努力。&lt;/p&gt;
&lt;h3&gt;Favorite Albums&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;列表，可能会分先后，如有遗漏，后续补充&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;七天&lt;/li&gt;
&lt;li&gt;阳光普照 电影原声配乐&lt;/li&gt;
&lt;li&gt;给天王星&lt;/li&gt;
&lt;li&gt;无名英雄&lt;/li&gt;
&lt;li&gt;藏着并不等于遗忘&lt;/li&gt;
&lt;li&gt;垂直活着，水平留恋着。&lt;/li&gt;
&lt;li&gt;我肯定在几百年前就说过爱你&lt;/li&gt;
&lt;li&gt;换句话说&lt;/li&gt;
&lt;li&gt;电火王&lt;/li&gt;
&lt;li&gt;越美丽越看不见&lt;/li&gt;
&lt;li&gt;Norman Fucking Rockwell&lt;/li&gt;
&lt;li&gt;Everyday Life&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;🎬️ 剧集&lt;/h2&gt;
&lt;p&gt;拍谢… 要说去年还算看了点美剧，那今年美剧算是基本没在碰了。&lt;/p&gt;
&lt;p&gt;同样地，台湾在社会写实题材剧上发力，成就了所谓的「爆款」，也是我今年的最爱。除此之外，在平淡中透露「人间烟火」的日剧，显然比那些看起来「唰嘴」的日剧，更讨我喜欢（年纪大的象征）。而在英剧方面可见的是，菲编的天才剧本令人心生欢喜，但黑镜的完全没落又让人感觉叹息。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有效剧集样本数：15 左右
不包含：用来下饭时用作背景音的、冗长的大陆剧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;台剧，光与暗&lt;/h3&gt;
&lt;p&gt;很多年来，台剧在文化输出上渐渐败下阵来，取而代之的是那些懒得提及的大陆剧集。自从英美剧开始进入视野，那些四五十集的超长大陆剧，已经让我发昏恶心。尤其是随处可见的一些槽点，尴尬的台词、漏洞的脚本、蹩脚的肢体语言，已经很难让我冷静地去看待这些剧集。&lt;/p&gt;
&lt;p&gt;当输出的价值观受限于未知时，通过观看能得到的正面的三观收获，也寥寥无几。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;光：我们与恶的距离&lt;sup id=&quot;fnref-7&quot;&gt;&lt;a href=&quot;#fn-7&quot; class=&quot;footnote-ref&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;虽然了解公视在台湾媒体的特殊地位，也知道公视在一直支持本土剧，尤其是本土社会写实剧的创作。当看完「与恶」之后，我仍然没有办法脱离那些从剧中影射到现实上的尖锐矛盾。于是又看了一遍的我，这次的疑问则是：我们能拍出这种剧集吗？&lt;/p&gt;
&lt;p&gt;答案则是：暂时无解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;暗：罪梦者&lt;/p&gt;
&lt;p&gt;同样是有台湾流媒体平台支持的作品，它在编辑和剪辑上让人摸不着头脑，怀疑自己是否是在做一堆乱七八糟的梦&lt;sup id=&quot;fnref-8&quot;&gt;&lt;a href=&quot;#fn-8&quot; class=&quot;footnote-ref&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;。如果说「与恶」给了台剧一道光，「罪梦者」则像是在对比中蒙上了一道阴影。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;从19冬，到19秋&lt;/h3&gt;
&lt;p&gt;这几年来，一直都能够每季固定地追两部左右的日剧。下面稍微列一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;19冬 3年A組 今から皆さんは、人質です&lt;/li&gt;
&lt;li&gt;19冬 家売るオンナの逆襲&lt;/li&gt;
&lt;li&gt;19春 わたし、定時で帰ります。&lt;/li&gt;
&lt;li&gt;19夏 凪のお暇 ⭐️&lt;/li&gt;
&lt;li&gt;19春、19夏 あなたの番です&lt;/li&gt;
&lt;li&gt;19秋 俺の話は長い ⭐️&lt;/li&gt;
&lt;li&gt;19秋 グランメゾン東京&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之前还立了个 flag，说「凪のお暇」可能会是我的日剧最佳。不过实在是… 狗没拿赛，我选「俺の话は长い」。&lt;/p&gt;
&lt;p&gt;男主在剧中话多、爱狡辩，在弹幕里也被键盘侠们教训地很惨。但不得不说，toma 所饰演的角色也代表了一种类型。家庭之间为了鸡毛蒜皮的小事拌嘴，而情感则在小吵小闹中逐渐变得不可替代。从小满和姐姐一家的亲情升温，到三枝交往结束后的复工决定，都代表着那些由小代志所爆发的大能量。&lt;/p&gt;
&lt;p&gt;「凪のお暇」也是我所喜欢的类型。高桥在里面饰演一个表面无谓、内心敏感的爱哭男子，凪则为了想要不看别人的脸色过活，选择了做自己。双方不被理解的部分，通过一系列的巧合与经历，逐渐地开始接纳，实在是觉得有点意思。&lt;/p&gt;
&lt;p&gt;再后面的话，除了熬夜看到最后烂尾的「轮到你了」，其他都还是挺推荐的。&lt;/p&gt;
&lt;h3&gt;Phoebe, and Deepfakes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fleabag S2&lt;/p&gt;
&lt;p&gt;不得不说，菲编乃大不列颠帝国的奇女子，又能编剧又能演。在之前看完第一季后，就开始苦苦地期盼着。第二季和神父的展开，让我进入了🍋️精的次元。&lt;/p&gt;
&lt;p&gt;在第一季里，「丧」对自我并用性来填充孤独的女主，面对着一个千疮百孔的生活。而在第二季里，她仍然不避讳自己的喜欢，也不再倚靠任何人。只有知道自己才能与生活直球对决，再自己用胶布贴上脆弱的「裂缝」，才能够自我拯救。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“And in the glory of being a woman, the darker bits are involved.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Capture&lt;/p&gt;
&lt;p&gt;这是看过后，还是会觉得心里发毛的剧。当所谓的视频录像不再真实，但足以成为关键性证据的时候，是否还能让冤者沉冤，让罪者获罪？&lt;/p&gt;
&lt;p&gt;Deepfakes 是人工智慧的产物，换脸 App 也很流行。当在使用这类软体的时候，恐怕大部分人都不会心存疑虑。如果这种技术成为可随意定人罪行的工具，也就代表着技术就像抗生素一样，成为了管用但滥用的绝佳代表。可能现在还看不到技术滥用未来，以及其造成的的苦果。等到大部分人类真正觉醒的时候，就必须要自己吞下了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;🎥️ 电影&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;有效电影样本数：2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今年也确实是没有在看电影，两部电影都是在院线看的，一部叫 Joker，而另一部叫流浪地球。&lt;/p&gt;
&lt;p&gt;前者倒是有比较多的地方可以说，角色表现无疑是最闪光之处，剧本也很有意思。很佩服那些能够联想的人呐，他们都太有趣了。&lt;/p&gt;
&lt;h2&gt;小物&lt;/h2&gt;
&lt;p&gt;先列举吧，有空再回来补…（隐形 flag）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WF1000-XM3&lt;/li&gt;
&lt;li&gt;三顿半&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;to be continued…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&quot;fn-1&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%A6%AC%E4%B8%96%E8%8A%B3&quot;&gt;馬世芳 - Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;#fnref-1&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;
&lt;/li&gt;
&lt;li id=&quot;fn-2&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mixcloud.com/IgarashiChiya/20181204-%E8%80%B3%E6%9C%B5%E5%80%9F%E6%88%91-%E9%A6%AC%E4%B8%96%E8%8A%B3-%E5%91%8A%E4%BA%94%E4%BA%BA%E5%B0%88%E8%A8%AA-alian%E5%8E%9F%E4%BD%8F%E6%B0%91%E6%97%8F%E5%BB%A3%E6%92%AD%E9%9B%BB%E8%87%BA/&quot;&gt;20181204-耳朵借我-馬世芳-告五人專訪 - Mixcloud&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;#fnref-2&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;
&lt;/li&gt;
&lt;li id=&quot;fn-3&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jQUR6zjj7Kc&quot;&gt;【陽光普照】電影主題曲－〈遠行〉official MV - Youtube&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;#fnref-3&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;
&lt;/li&gt;
&lt;li id=&quot;fn-4&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.thenewslens.com/article/128986&quot;&gt;年過60的陳昇：男人上了年紀要 Do something！不要一直碎碎念 - 關鍵評論網&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;#fnref-4&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;
&lt;/li&gt;
&lt;li id=&quot;fn-5&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://music.douban.com/subject/34866530/&quot;&gt;越美麗越看不見 - 豆瓣&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;#fnref-5&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;
&lt;/li&gt;
&lt;li id=&quot;fn-6&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://open.spotify.com/playlist/37i9dQZF1DX0rfzJZ1SihB&quot;&gt;2019 金音獎精選 - Spotify&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;#fnref-6&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;
&lt;/li&gt;
&lt;li id=&quot;fn-7&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://ent.ltn.com.tw/news/breakingnews/3001373&quot;&gt;台灣之光！《與惡》唯一台劇 站上新加坡掃2大獎 - 自由時報&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;#fnref-7&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;
&lt;/li&gt;
&lt;li id=&quot;fn-8&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.businessweekly.com.tw/focus/blog/3000767&quot;&gt;Netflix挖來HBO班底，斥重金拍攝的《罪夢者》為何換來負評？ - 商業週刊&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;#fnref-8&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content:encoded></item><item><title><![CDATA[嘿，苹果 - Laptop 黑苹果改造]]></title><description><![CDATA[上初中的时候，就曾经为了改造家里的台式机，掏钱买了张 AMD…]]></description><link>https://blog.tocz9ea.com/hackintosh-laptop/</link><guid isPermaLink="false">https://blog.tocz9ea.com/hackintosh-laptop/</guid><pubDate>Sun, 13 Oct 2019 12:16:39 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;上初中的时候，就曾经为了改造家里的台式机，掏钱买了张 AMD 显卡。现在手中的笔电也用了四五年，每年都想鼓捣一回黑苹果，但每年都因为大大小小的原因而失败。
这次就不想麻烦自己去捣鼓它了，毕竟当配置变得亲民时，上网搜寻一下就找到现有方案了，那为什么还要写这篇呢？&lt;/p&gt;
&lt;p&gt;我也唔知。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2019101301.jpg&quot; alt style=&quot;width:100%&quot;&gt;
&lt;h2&gt;查型号，找配置&lt;/h2&gt;
&lt;p&gt;首先，你可以通过一些硬件检测软件（鲁大师也不是不行😅️）看到你的整体硬件信息。如果是游戏笔电的话，最好能知道主板型号。总之，如果能掌握正确清楚的硬件规格是最🐒️的，因为软件上显示的可能是一个系列，或者是大概的内容，可以多用几个软件对比下。&lt;/p&gt;
&lt;p&gt;之后，自然是去 PCBeta 上找配置了。自己手上的笔电是 2015 年的 i7-4710MQ + GTX 950M，如果知道准系统的话，大概就知道蓝天（Clevo），主机板型号是 &lt;code class=&quot;language-text&quot;&gt;W670SCQ&lt;/code&gt;。去淘宝上逛一下，可能就知道 &lt;code class=&quot;language-text&quot;&gt;Hasee K650D&lt;/code&gt; 能够基本匹配上。再按图索骥，去论坛里找个差不多的 Clover config 文件用上就差不多了。&lt;/p&gt;
&lt;p&gt;当然可能一些人的配置不够大众，就需要自己去折腾 DSDT、显示卡、网络卡、无线网路、音效卡等等内容了。这些在论坛中也能看到，多爬文章多动手吧。&lt;/p&gt;
&lt;h2&gt;为了完美，要付出&lt;/h2&gt;
&lt;p&gt;黑苹果笔电的一大坑点，就在于市面上配置的无线网卡，大部分都是 Intel 或 Realtek。而这两家厂商的硬件，基本没有能够使用的驱动。这时候就要拆机看无线网络卡的大小，去购买博通的卡替换。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当然，如果您觉得周围有多出来的 USB 端口可以使用外接无线网卡的话，也不是不行〜（但是最好还是选择花钱买一个内建的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;像我的主板适用的是 BCM94352HMB，一张 Mini PCI-E 无线网卡。替换后记得把天线插好，开机试验看看能否在 Windows 下正常地驱动及使用。&lt;/p&gt;
&lt;p&gt;中间还遇到了一个麻烦，就是屏蔽针脚。因为如果不这样做，蓝牙功能在 macOS 上就不可用。当时只屏蔽了 51 针脚，发现睡眠后无法连接 Wi-Fi，后来再翻阅论坛上的文章和 YouTube 的视频，并自己尝试了不知道几次之后，最终再屏蔽 20 针脚，就能正常工作了。&lt;/p&gt;
&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2019101302.png&quot; alt style=&quot;width:100%&quot;&gt;
&lt;h2&gt;完美不了，接近就好&lt;/h2&gt;
&lt;p&gt;上面是 “为了完美”，付出了💰️。但只要是个黑苹果玩家，就一定会在论坛上看到许多这样的标题：xxxxxx 99% 完美 Catalina 黑果配置。&lt;/p&gt;
&lt;p&gt;从这种标题里，可以看出来能够完全完美驾驭 macOS 并不容易，甚至少有人达到。就自己所找到了这份配置中，我遇到的瑕疵包括：睡眠唤醒黑屏（疑似集显驱动不正确），蓝牙连接耳机会时断时续等等。 （好像也就这两个问题了&lt;/p&gt;
&lt;p&gt;总之也是懒得折腾了，就这样先用吧。 （Catalina 暂时还不敢更新 （卑微&lt;/p&gt;</content:encoded></item><item><title><![CDATA[JavaScript 中的 this 指向]]></title><description><![CDATA[JavaScript 中的 this，永远指向最后调用它的那个对象。  in JavaScript 下面是几个改变 this 指向的 example： ES6 Array function  Operator , ,]]></description><link>https://blog.tocz9ea.com/javascript-this-intro/</link><guid isPermaLink="false">https://blog.tocz9ea.com/javascript-this-intro/</guid><pubDate>Thu, 21 Feb 2019 10:38:29 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;JavaScript 中的 this，永远指向最后调用它的那个对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;code class=&quot;language-text&quot;&gt;this&lt;/code&gt; in JavaScript&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; currentYear &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  yaer&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token function-variable function&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

currentYear&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;下面是几个改变 this 指向的 example：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;ES6 Array function&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; year &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; nextYear &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  year&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;token function-variable function&quot;&gt;func1&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;year&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;token function-variable function&quot;&gt;func2&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;func1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

nextYear&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;func2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 2020&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;code class=&quot;language-text&quot;&gt;new&lt;/code&gt; Operator&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; year &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Func&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;year &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; lastYear &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lastYear&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;year&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 2018&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;code class=&quot;language-text&quot;&gt;apply&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;call&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;bind&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; year &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; nextYear &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  year&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;token function-variable function&quot;&gt;func1&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;year&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;token function-variable function&quot;&gt;func2&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;func1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nextYear&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// }.call(nextYear), 100);&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// }.bind(nextYear)(), 100);&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

nextYear&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;func2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 2020&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;code class=&quot;language-text&quot;&gt;_this = this&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; year &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; nextYear &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  year&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;token function-variable function&quot;&gt;func1&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;year&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;token function-variable function&quot;&gt;func2&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; _this &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      _this&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;func1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

nextYear&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;func2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 2020&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr /&gt;</content:encoded></item><item><title><![CDATA[Hadoop, Scala, Spark 简单安装与配置]]></title><description><![CDATA[前期准备工作 CentOS 7 JDK 1.8（自行准备，此文不叙） https://hadoop.apache.org/releases.html 下载 Hadoop 3.x 版本 https://www.scala-lang.org/download/ 下载 Scala…]]></description><link>https://blog.tocz9ea.com/hadoop-scala-spark-config/</link><guid isPermaLink="false">https://blog.tocz9ea.com/hadoop-scala-spark-config/</guid><pubDate>Thu, 13 Sep 2018 15:27:25 GMT</pubDate><content:encoded>&lt;h2&gt;前期准备工作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;CentOS 7&lt;/li&gt;
&lt;li&gt;JDK 1.8（自行准备，此文不叙）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hadoop.apache.org/releases.html&quot;&gt;https://hadoop.apache.org/releases.html&lt;/a&gt; 下载 Hadoop 3.x 版本&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.scala-lang.org/download/&quot;&gt;https://www.scala-lang.org/download/&lt;/a&gt; 下载 Scala 2.12.x 版本（.tgz File）&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://spark.apache.org/downloads.html&quot;&gt;http://spark.apache.org/downloads.html&lt;/a&gt; 下载 Spark 2.3.x 版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choose a package type:  Pre-built for Apache Hadoop 2.7 and later&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;全部下载好后，将压缩包放入 &lt;code class=&quot;language-text&quot;&gt;/opt/sources&lt;/code&gt; 文件夹下，将各个压缩包解压的文件夹放入 &lt;code class=&quot;language-text&quot;&gt;/opt&lt;/code&gt; 文件夹下。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;全局设置&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;/etc/profile&lt;/code&gt; 文件中添加如下内容：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;## Java&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/opt/jdk1.8.0_181

&lt;span class=&quot;token comment&quot;&gt;## Hadoop&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;HADOOP_HOME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/opt/hadoop-3.1.1

&lt;span class=&quot;token comment&quot;&gt;## HBase&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;HBASE_HOME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/opt/hbase-1.4.6

&lt;span class=&quot;token comment&quot;&gt;## ZooKeeper&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;ZOOKEEPER_HOME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/opt/zookeeper-3.4.12
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$HADOOP_HOME&lt;/span&gt;/bin:&lt;span class=&quot;token variable&quot;&gt;$HADOOP_HOME&lt;/span&gt;/sbin:&lt;span class=&quot;token variable&quot;&gt;$HBASE_HOME&lt;/span&gt;/bin:&lt;span class=&quot;token variable&quot;&gt;$ZOOKEEPER_HOME&lt;/span&gt;/bin:&lt;span class=&quot;token variable&quot;&gt;$JAVA_HOME&lt;/span&gt;/bin:&lt;span class=&quot;token environment constant&quot;&gt;$PATH&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;## Scala&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;SCALA_HOME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/opt/scala-2.12.6
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token environment constant&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$SCALA_HOME&lt;/span&gt;/bin

&lt;span class=&quot;token comment&quot;&gt;## Spark&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;SPARK_HOME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/opt/spark-2.3.1-bin-hadoop2.7
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token environment constant&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$SPARK_HOME&lt;/span&gt;/bin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置完毕后，记得要： &lt;code class=&quot;language-text&quot;&gt;source /etc/profile&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Hadoop 3.x 伪分布配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;/opt/hadoop-3.1.1/etc/hadoop/hadoop-env.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# The java implementation to use. By default, this environment&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# variable is REQUIRED on ALL platforms except OS X!&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/opt/jdk1.8.0_181&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;/opt/hadoop-3.1.1/etc/hadoop/core-site.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;xml&quot;&gt;&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;hadoop.tmp.dir&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;/home/users/hadoop/hadoop/tmp&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;fs.default.name&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;hdfs://localhost:9000&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;/opt/hadoop-3.1.1/etc/hadoop/hdfs-site.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;xml&quot;&gt;&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;dfs.datanode.data.dir&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;/home/users/hadoop/hadoop/data&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;dfs.namenode.name.dir&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;/home/users/hadoop/hadoop/name&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;dfs.http.address&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;0.0.0.0:8100&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;dfs.replication&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;/opt/hadoop-3.1.1/sbin/start-dfs.sh&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;/opt/hadoop-3.1.1/sbin/stop-dfs.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;HDFS_DATANODE_USER&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;root
&lt;span class=&quot;token assign-left variable&quot;&gt;HDFS_DATANODE_SECURE_USER&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;hdfs
&lt;span class=&quot;token assign-left variable&quot;&gt;HDFS_NAMENODE_USER&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;root
&lt;span class=&quot;token assign-left variable&quot;&gt;HDFS_SECONDARYNAMENODE_USER&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;root&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) &lt;code class=&quot;language-text&quot;&gt;/opt/hadoop-3.1.1/sbin/start-yarn.sh&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;/opt/hadoop-3.1.1/sbin/start-yarn.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;YARN_RESOURCEMANAGER_USER&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;root
&lt;span class=&quot;token assign-left variable&quot;&gt;HDFS_DATANODE_SECURE_USER&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;yarn
&lt;span class=&quot;token assign-left variable&quot;&gt;YARN_NODEMANAGER_USER&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;root&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;hdfs namenode -format&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;start-dfs.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;测试 Scala 是否正常&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;# scala -version&lt;/span&gt;

Scala code runner version &lt;span class=&quot;token number&quot;&gt;2.12&lt;/span&gt;.6 -- Copyright &lt;span class=&quot;token number&quot;&gt;2002&lt;/span&gt;-2018, LAMP/EPFL and Lightbend, Inc.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;测试 Spark 是否正常&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;# spark-shell&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;2018&lt;/span&gt;-09-13 &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;:13:57 WARN  Utils:66 - Your hostname, localhost.localdomain resolves to a loopback address: &lt;span class=&quot;token number&quot;&gt;127.0&lt;/span&gt;.0.1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; using &lt;span class=&quot;token number&quot;&gt;192.168&lt;/span&gt;.123.101 instead &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;on interface enp0s3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;2018&lt;/span&gt;-09-13 &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;:13:57 WARN  Utils:66 - Set SPARK_LOCAL_IP &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; you need to &lt;span class=&quot;token builtin class-name&quot;&gt;bind&lt;/span&gt; to another address
&lt;span class=&quot;token number&quot;&gt;2018&lt;/span&gt;-09-13 &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;:13:57 WARN  NativeCodeLoader:62 - Unable to load native-hadoop library &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; your platform&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;. using builtin-java classes where applicable
Setting default log level to &lt;span class=&quot;token string&quot;&gt;&quot;WARN&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
To adjust logging level use sc.setLogLevel&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;newLevel&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;. For SparkR, use setLogLevel&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;newLevel&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.
Spark context Web UI available at http://192.168.123.101:4040
Spark context available as &lt;span class=&quot;token string&quot;&gt;&apos;sc&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;master &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; local&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;*&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;, app &lt;span class=&quot;token function&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; local-1536822855033&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.
Spark session available as &lt;span class=&quot;token string&quot;&gt;&apos;spark&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;/ _ &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;/ _ `/ __/  &apos;_/
   /___/ .__/&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;_,_/_/ /_/&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;_&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;   version &lt;span class=&quot;token number&quot;&gt;2.3&lt;/span&gt;.1
      /_/
         
Using Scala version &lt;span class=&quot;token number&quot;&gt;2.11&lt;/span&gt;.8 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Java HotSpot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;-Bit Server VM, Java &lt;span class=&quot;token number&quot;&gt;1.8&lt;/span&gt;.0_181&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Type &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; expressions to have them evaluated.
Type :help &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;more&lt;/span&gt; information.

scala&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[一次经历 一次笔试]]></title><description><![CDATA[…]]></description><link>https://blog.tocz9ea.com/a-experience-and-a-frontend-test/</link><guid isPermaLink="false">https://blog.tocz9ea.com/a-experience-and-a-frontend-test/</guid><pubDate>Sat, 08 Sep 2018 23:04:52 GMT</pubDate><content:encoded>&lt;h2&gt;最近忙什么&lt;/h2&gt;
&lt;p&gt;八月末，接到学院老师的电话，说有一份实习可以让我试试。大致订下了时间，第二天先和同学吃饭吹水，第三天一大早就坐上动车，前往假·省城。&lt;/p&gt;
&lt;p&gt;个中过程不叙。总之，是打算先帮助团队完成他们负责的工作，周末前往真·省城。部署了机房的机器，之后就给老师当当助教。&lt;/p&gt;
&lt;p&gt;同是一个专业的，感觉班级间的交流氛围，和他们的兴趣三观，都比较契合吧，聊得也很开心。只可惜不能呆久一点就是了。&lt;/p&gt;
&lt;p&gt;一周也就过去了。目前在宿舍里，望着教务网中没多少的课表，想着之后要怎么办。😔️&lt;/p&gt;
&lt;h2&gt;一次凉凉的阿里笔试&lt;/h2&gt;
&lt;p&gt;周三下午和周四没有任务，在酒店里收到了之前沧海乱投的“一粟”。（其实也有其他面试，但都错过了，心累）&lt;/p&gt;
&lt;p&gt;下面 po 一下题目。（先列出知识点，然后继续努力）&lt;/p&gt;
&lt;h3&gt;下列哪一项不是 Hybrid 应用架构的优势：&lt;/h3&gt;
&lt;p&gt;能够带来更好的 Web 页面渲染性能
能够利用操作系统的原生能力
能够突破浏览器的缓存限制，扩展更强的缓存功能
开发成本较低，可以跨平台
可以比较自由的更新代码
针对开发新手，非常地友好，易于上手&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：Hybrid，缓存&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;关于 Cookie 以下说法错误的是：&lt;/h3&gt;
&lt;p&gt;如果仅是为了缓存数据，采用 localStorage 比 Cookie 更好
二级域名的页面请求时，同时会携带主域名的 Cookie
对 Cookie 进行加密，可以降低 cookie 被截获后窃取服务端数据的风险
客户端可以设置 Cookie
服务端可以设置 Cookie
Cookie 的值是有大小限制的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：Cookie，Web Storage&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;关于 HTTP 请求的 Status Code，正确的是：&lt;/h3&gt;
&lt;p&gt;判断请求成功仅需判断 status === 200
未登录错误为 302
403 一般是由于用户登录但权限不够造成的
307 可以完全用 301 代替实现
404 错误不会被缓存
相比 301，302 对搜索引擎更友好&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：HTTP status codes&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot;&gt;Wikipedia – List of HTTP status codes&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;下面关于 React 和 Vue 的说法正确的是：&lt;/h3&gt;
&lt;p&gt;Vue 的性能非常好，不可能将原生 JavaScript 代码优化到 Vue 的性能
Vue 体积比 React 小，所以运行性能全面好于 React
React16 引入新的生命周期可以捕获 Component 的错误
Vue 的服务端渲染非常快，比字符串模版渲染还要快
React 没有办法从子组件向父组件传递值
Vue1 和 Vue2 都不支持服务器渲染&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：React，Vue，渲染机制，组件化，生命周期&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;盒模型不包含以下哪一个属性？&lt;/h3&gt;
&lt;p&gt;Padding
Content
Border
Margin
Width
Height
Position&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：CSS，盒模型&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a href=&quot;https://en.wikipedia.org/wiki/CSS_box_model&quot;&gt;Wikipedia – CSS box model&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;以下关于 JavaScript 的堆栈的描述正确的是：&lt;/h3&gt;
&lt;p&gt;JavaScript 的 String、Array 类型的数据都是放在栈内存里的
JavaScript 的引用类型是放在堆内存里的
栈的读取顺序是先进先出的
堆的读取顺序是先进后出的
栈内存会由系统自动分配释放
堆内存是大小固定的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：数据结构，堆，栈&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;关于跨域，以下说法正确的是：&lt;/h3&gt;
&lt;p&gt;jsonp 可以跨域
fetch 可以跨域
ajax 可以跨域
postMessage 可以跨域
为了防止跨域请求攻击，服务端需要判断 cookie 信息
采用 token 机制跨域防止跨域攻击&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：跨域，JSONP，Fetch，AJAX，postMessage，Cookie，token机制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;下面哪些功能 Service Worker 可以完成：&lt;/h3&gt;
&lt;p&gt;Mock 数据请求
主动拉取资源文件，并将其缓存
当请求数据时候服务器 404，自动降级成兜底数据
将离线时的打点数据存起来，等到联网后再传输
直接对DOM进行操作
浏览器关闭后，依然常驻&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：Service Worker，模拟请求，缓存机制，请求，DOM&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;下面关于性能优化正确的是：&lt;/h3&gt;
&lt;p&gt;PNG 图片永远比 JPG 图片小，所以应当尽量使用 PNG
CSS 不能放在 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 底部，因为会导致页面重新渲染
尽量不要使用 &lt;code class=&quot;language-text&quot;&gt;with&lt;/code&gt;，因为 &lt;code class=&quot;language-text&quot;&gt;with&lt;/code&gt; 内的代码执行效率会变低
PNG 图片压缩是没用的，因为其算法和 gzip 算法都是无损压缩，所以并不能减少图片大小
浏览器创建和维持 HTTP链接是需要性能消耗的，所以应当尽量减少同时存在 HTTP 链接的数量
只能通过服务器检验来确定浏览器是否支持 WebP，JavaScript 没办法检验浏览器是否支持&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：图片压缩，WebP，gzip，HTTP，CSS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;以下哪些关于 npm 安装包的说法错误的：&lt;/h3&gt;
&lt;p&gt;使用 &lt;code class=&quot;language-text&quot;&gt;npm install -g my-pkg&lt;/code&gt; 可以将包安装到全局
&lt;code class=&quot;language-text&quot;&gt;npm install my-pkg@1.x&lt;/code&gt;可以安装1.0以上版本
&lt;code class=&quot;language-text&quot;&gt;npm I my-pkg&lt;/code&gt;也可以安装
&lt;code class=&quot;language-text&quot;&gt;npm install @latest/my-pkg&lt;/code&gt;是错误的写法
&lt;code class=&quot;language-text&quot;&gt;npm install git://github.com/npm/npm.git&lt;/code&gt;是正确的用法
&lt;code class=&quot;language-text&quot;&gt;npm install my-pkg –latest&lt;/code&gt;可以安装包的最新版本&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：Node.js，NPM包管理器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;请根据描述使用 JavaScript 实现函数 _bind 模拟原生 bind 方法，并通过测试用例：&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;Function &lt;span class=&quot;token function&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    Console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;//your code here&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;//测试用例&lt;/span&gt;
Func&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;_bind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;y&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; ‘foo’&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//undefined “foo”&lt;/span&gt;
Func&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;_bind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//undefined undefined&lt;/span&gt;
Func&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;_bind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;y&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; ‘bar’&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ‘foo’&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//”foo” “bar”&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;知识点：原型链&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tocz9es/js-demos/blob/master/2-make-bind/make_bind.js&quot;&gt;题解&lt;/a&gt;（通过 Node.js 验证，但不一定是最好写法）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;异步请求逻辑注入&lt;/h3&gt;
&lt;p&gt;工作中我们需要对异步请求的请求信息打印日志，但是又不能耦合在业务代码中打印。请设计一个方法injectBeforeAsyncSend，能够实现如下功能：在发起异步请求之前打印出请求的类型、URL、method、body、timestamp 等信息。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * injectBeforeAsyncSend.js
 * @param {function(asynConfig)} beforeSend
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;injectBeforeAsyncSend&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;beforeSend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// 请在这里补充你的代码实现，在实现代码中请调用 beforeSend 方法进行日志打印&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;injectBeforeAsyncSend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;asynConfig&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;asynConfig&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; injectBeforeAsyncSend&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试用例：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 引入任意想使用的前端异步请求框架&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; $ &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;jquery&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; injectBeforeAsyncSend &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;./injectBeforeAsyncSend&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// jquery 发起 get 请求&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 打印 {&quot;asyncType&quot;:&quot;ajax by XMLHttpRequest&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/user&quot;,&quot;body&quot;:null,&quot;timestamp&quot;:1522143037821}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// jquery 发起带参数 post 请求&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;POST&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; username&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;jone&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 打印 {&quot;asyncType&quot;:&quot;ajax by XMLHttpRequest&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;/user&quot;,&quot;body&quot;:&quot;username=jone&quot;,&quot;timestamp&quot;:1522143037828}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// jquery 发起 jsonp 请求&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://www.alibaba.com/user.jsonp&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    dataType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;jsonp&apos;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 打印 {&quot;asyncType&quot;:&quot;jsonp by script&quot;,&quot;method&quot;:&quot;get&quot;,&quot;url&quot;:&quot;https://www.alibaba.com/user.jsonp?callback=jQuery331047025307012584316_1522143037811&amp;amp;_=1522143037812&quot;,&quot;timestamp&quot;:1522143037832}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// fetch 请求&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 打印 {&quot;asyncType&quot;:&quot;ajax by XMLHttpRequest&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/user&quot;,&quot;body&quot;:null,&quot;timestamp&quot;:1522143037838}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;菜鸡，没做出来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;实现一个网页版的聊天室（类似于钉钉群），请列出关键的技术方案及要点。需求如下：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;高实时性、高性能&lt;/li&gt;
&lt;li&gt;你发的每条消息可以看到有多少人已读&lt;/li&gt;
&lt;li&gt;当信息中含有“@某人”时，被@的人的界面上会显示“有人@你”的提醒字样&lt;/li&gt;
&lt;li&gt;刷新页面或断网状态下，历史聊天记录不会消失&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;开放型试题，自认为答得一般，就没脸秀自己写啥了。&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[JavaScript 之代码执行]]></title><description><![CDATA[这次啃一个 GitHub repo 上的几篇文章，虽然 Blogger 讲得算很易懂了，但还是要花时间好好吸收一下。 作用域 JavaScript…]]></description><link>https://blog.tocz9ea.com/js-code-executable/</link><guid isPermaLink="false">https://blog.tocz9ea.com/js-code-executable/</guid><pubDate>Mon, 13 Aug 2018 16:36:46 GMT</pubDate><content:encoded>&lt;p&gt;这次啃一个 GitHub repo 上的几篇文章，虽然 Blogger 讲得算很易懂了，但还是要花时间好好吸收一下。&lt;/p&gt;
&lt;h2&gt;作用域&lt;/h2&gt;
&lt;p&gt;JavaScript 采用词法作用域（静态作用域），函数的作用域在函数定义时就已经确定。与之相反的动态作用域，函数的作用域是在函数调用时才决定。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-1&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 定义: 函数内无局部变量 value，获取全局变量 value = 1&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 调用 foo(): 不再获取 bar() 内的局部变量 value&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果是动态作用域，则是：执行 &lt;code class=&quot;language-text&quot;&gt;foo()&lt;/code&gt;，依然先从 &lt;code class=&quot;language-text&quot;&gt;foo()&lt;/code&gt; 内部查找是否有局部变量 &lt;code class=&quot;language-text&quot;&gt;value&lt;/code&gt;。如果没有，就从调用函数的作用域，也就是 &lt;code class=&quot;language-text&quot;&gt;bar()&lt;/code&gt; 内部查找 &lt;code class=&quot;language-text&quot;&gt;value&lt;/code&gt;，结果为 2。&lt;/p&gt;
&lt;p&gt;接下来是两段代码，虽然执行结果相同，但在执行上却有何差异？&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-2 Code&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; scope &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;global scope&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;checkscope&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; scope &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;local scope&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; scope&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;checkscope&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// &quot;local scope&quot;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;//example-3 Code&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; scope &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;global scope&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;checkscope&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; scope &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;local scope&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; scope&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; f&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;checkscope&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//&quot;local scope&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;找到了 SegmentFault 上的一个&lt;a href=&quot;https://segmentfault.com/q/1010000005857486/&quot;&gt;提问&lt;/a&gt;，解释的较为详细了。&lt;/p&gt;
&lt;p&gt;从代码的行文来看，会发现：&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;example-2&lt;/code&gt;：&lt;code class=&quot;language-text&quot;&gt;checkscope()&lt;/code&gt; 返回的是内部函数 &lt;code class=&quot;language-text&quot;&gt;f()&lt;/code&gt; 的执行结果；
&lt;code class=&quot;language-text&quot;&gt;example-3&lt;/code&gt;：&lt;code class=&quot;language-text&quot;&gt;checkscope()&lt;/code&gt; 返回的是内部函数 &lt;code class=&quot;language-text&quot;&gt;f&lt;/code&gt;，然后再执行返回的函数。&lt;/p&gt;
&lt;h2&gt;順序執行？&lt;/h2&gt;
&lt;p&gt;JavaScript 引擎并非以行来分析和执行代码，而是以段来分析执行。当执行一段代码的时候，会进行一个「准备工作」，比如下例的变量提升和函数提升：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-4 Code&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;foo1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// foo1&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;foo2&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// foo2&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// example-5 Code&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;foo1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// foo2&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;foo2&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// foo2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-4 Real 变量提升&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; foo&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token function-variable function&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;foo1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//foo1&lt;/span&gt;

&lt;span class=&quot;token function-variable function&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;foo2&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//foo2&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;//example-5 Real 函数提升&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; foo&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function-variable function&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;foo1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function-variable function&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;foo2&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// foo2&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// foo2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;global var&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;function var&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;function arg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// function var&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// function var &gt; function arg &gt; global var&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;执行上下文栈&lt;/h2&gt;
&lt;p&gt;JavaScript 引擎创建了执行上下文栈（Execution context stack，ECS）来管理执行上下文，可以定义它为一个数组：&lt;code class=&quot;language-text&quot;&gt;ECStack = [ ];&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当 JS 需要解释执行代码的时候，最先遇到全局代码，所以在初始化时先向栈内压入一个全局执行上下文，表示为 &lt;code class=&quot;language-text&quot;&gt;globalContext&lt;/code&gt;。只有当整个应用程序结束时，&lt;code class=&quot;language-text&quot;&gt;ECStack&lt;/code&gt; 才会被清空。所以程序结束之前，&lt;code class=&quot;language-text&quot;&gt;ECStack&lt;/code&gt; 底部永远有 &lt;code class=&quot;language-text&quot;&gt;globalContext&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-6 Code&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fun3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;fun3&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fun2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;fun3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fun1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;fun2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;fun1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当上例的代码执行时，执行上下文栈的处理为：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-6  Execute&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;fun1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; functionContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// fun1()&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;fun2&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; functionContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// fun1() 调用fun2()，创建 fun2() 的执行上下文&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;fun3&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; functionContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// fun2() 调用fun3()，创建 fun3() 的执行上下文&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// fun3() 执行完毕&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// fun2() 执行完毕&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// fun1() 执行完毕&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// JavaScript 接着执行下面的代码，但是 ECStack 底层永远有个 globalContext&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后我们回到 &lt;code class=&quot;language-text&quot;&gt;example-2&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;example-3&lt;/code&gt; 中，模拟执行上下文栈。此时能看出两段代码的区别：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-2 Execute&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;checkscope&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; functionContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;f&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; functionContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;f&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;chechscope&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// example-3 Execute&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;checkscope&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; functionContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;checkscope&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;f&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; functionContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
ECStack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;f&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于每个执行上下文，都有三个重要属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;变量对象 (Variable object，VO)&lt;/li&gt;
&lt;li&gt;作用域链 (Scope chain)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;this&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面具体讨论上面提出的三个属性。&lt;/p&gt;
&lt;h3&gt;变量对象&lt;/h3&gt;
&lt;p&gt;变量对象存储上下文中定义的变量和函数声明。下面分情况讨论&lt;strong&gt;全局上下文&lt;/strong&gt;的变量对象，和&lt;strong&gt;函数上下文&lt;/strong&gt;的变量对象。&lt;/p&gt;
&lt;h4&gt;全局上下文&lt;/h4&gt;
&lt;p&gt;全局上下文中的变量对象，就是全局对象。是由 Object 构造函数实例化出的对象。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;全局对象预定义了一些函数和属性，还可以作为全局变量的宿主。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;函数上下文&lt;/h4&gt;
&lt;p&gt;在函数上下文中，通常使用活动对象(activation object, AO)表示变量对象。&lt;/p&gt;
&lt;p&gt;活动对象无法直接通过 JS 进行引用，只有当 AO 进入执行上下文中才会被创建，通过函数的 &lt;code class=&quot;language-text&quot;&gt;arguments&lt;/code&gt; 属性初始化。&lt;/p&gt;
&lt;h4&gt;执行过程&lt;/h4&gt;
&lt;p&gt;接下来以下面的代码为例，解释执行上下文的过程。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-7 Code&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; b &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  b &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入执行上下文，会依次导入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导入函数的所有形参&lt;/li&gt;
&lt;li&gt;函数声明&lt;/li&gt;
&lt;li&gt;变量声明&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-7 Step-1&lt;/span&gt;
&lt;span class=&quot;token constant&quot;&gt;VO&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    arguments&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        length&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;                              &lt;span class=&quot;token comment&quot;&gt;// 形参&lt;/span&gt;
    a&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;                           &lt;span class=&quot;token comment&quot;&gt;// 形参，值为实参或 undefined&lt;/span&gt;
    b&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;                   &lt;span class=&quot;token comment&quot;&gt;// 变量声明&lt;/span&gt;
    c&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; reference to &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 函数声明 地址引用&lt;/span&gt;
    d&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;                    &lt;span class=&quot;token comment&quot;&gt;// 变量声明&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;代码执行，给变量声明赋值&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-7 Step-2&lt;/span&gt;
&lt;span class=&quot;token constant&quot;&gt;AO&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    arguments&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        length&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    a&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    b&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;                                  &lt;span class=&quot;token comment&quot;&gt;// 变量声明 赋值&lt;/span&gt;
    c&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; reference to &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    d&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; reference to FunctionExpression &lt;span class=&quot;token string&quot;&gt;&quot;d&quot;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 变量声明 引用&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/5#issuecomment-305073897&quot;&gt;思考：下面的代码将输出何内容？&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// example-8 Code&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;foo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; foo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// foo() {&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//   console.log(&quot;foo&quot;);&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;思路：函数提升 &gt; 变量提升&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//example-8 Hint&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 函数提升&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; foo&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 变量提升&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;foo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// foo&lt;/span&gt;
foo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;作用域链&lt;/h3&gt;
&lt;p&gt;大概过程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 &lt;code class=&quot;language-text&quot;&gt;ECStack = []&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;首先压入 &lt;code class=&quot;language-text&quot;&gt;globalContext&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;初始化 &lt;code class=&quot;language-text&quot;&gt;globalContext&lt;/code&gt; 的执行上下文(VO)，获取变量对象&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;globalContext&lt;/code&gt; 代码执行(AO)&lt;/li&gt;
&lt;li&gt;函数&lt;code class=&quot;language-text&quot;&gt;checkscope()&lt;/code&gt; 被创建,初始化内部属性 &lt;code class=&quot;language-text&quot;&gt;[[scope]]&lt;/code&gt;，值为 &lt;code class=&quot;language-text&quot;&gt;globalContext.AO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;函数提升，执行 &lt;code class=&quot;language-text&quot;&gt;checkscope()&lt;/code&gt; 代码，&lt;code class=&quot;language-text&quot;&gt;checkscopeContext&lt;/code&gt; 压入&lt;code class=&quot;language-text&quot;&gt;ECStack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;初始化 &lt;code class=&quot;language-text&quot;&gt;checkscope()&lt;/code&gt; 的执行上下文，复制 &lt;code class=&quot;language-text&quot;&gt;checkscope.[[scope]]&lt;/code&gt; 到 &lt;code class=&quot;language-text&quot;&gt;scopeChain&lt;/code&gt; 中&lt;/li&gt;
&lt;li&gt;进入执行上下文 VO&lt;/li&gt;
&lt;li&gt;代码执行 AO&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;更详细的就不写了：&lt;a href=&quot;https://github.com/wolfdu/blog-gitment/issues/13&quot;&gt;关于 &lt;code class=&quot;language-text&quot;&gt;example-2&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;example-3&lt;/code&gt; 的具体分析&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;code class=&quot;language-text&quot;&gt;this&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;该部分待编辑&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[JavaScript 原型链和一道面试题]]></title><description><![CDATA[继续啃高程中… 这次是关于 JS 原型链的问题，和在看某乎文章时提及的定时器的工作原理问题。 关键词：原型链、闭包、变量作用域（ES6语法）、IIFE…]]></description><link>https://blog.tocz9ea.com/js-prototype-and-a-quest/</link><guid isPermaLink="false">https://blog.tocz9ea.com/js-prototype-and-a-quest/</guid><pubDate>Sun, 05 Aug 2018 09:51:45 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;继续啃高程中… 这次是关于 JS 原型链的问题，和在看某乎文章时提及的定时器的工作原理问题。&lt;/p&gt;
&lt;p&gt;关键词：原型链、闭包、变量作用域（ES6语法）、IIFE、定时器原理…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;原型链&lt;/h2&gt;
&lt;h3&gt;原理&lt;/h3&gt;
&lt;p&gt;构造函数、原型与实例的关系：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。&lt;/p&gt;
&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018080501.png&quot; alt style=&quot;width:100%&quot;&gt;
&lt;p&gt;下面这个例子可以辅助理解这一问题：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 构造函数&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; gender&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gender &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; gender&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 生成实例对象&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; person1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;male&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; person2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Ada&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;female&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;person1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; person2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gender&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// John Female&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为了生成 &lt;code class=&quot;language-text&quot;&gt;person1&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;person2&lt;/code&gt; 两个实例对象，首先要创建构造函数。&lt;/p&gt;
&lt;p&gt;与普通函数不同是，只有通过 &lt;code class=&quot;language-text&quot;&gt;new&lt;/code&gt; 创造实例对象的函数才为构造函数。&lt;/p&gt;
&lt;p&gt;上例创建的构造函数不仅有需要定义的两个属性：&lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;gender&lt;/code&gt;，还需具有实例间可共享的 &lt;code class=&quot;language-text&quot;&gt;prototype&lt;/code&gt; 属性（原型）。&lt;/p&gt;
&lt;p&gt;而此时两个实例对象都具有一个特别的 &lt;code class=&quot;language-text&quot;&gt;__proto__&lt;/code&gt; 属性，用于链接构造函数的 &lt;code class=&quot;language-text&quot;&gt;prototype&lt;/code&gt; 共享属性。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 构造函数&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; gender&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gender &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; gender&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 共享属性 prototype&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// { }&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; country&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;China&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// { country: &quot;China&quot; }&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 生成实例对象&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; person1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;male&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; person2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Ada&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;female&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;person1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;country&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; person2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;country&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// China China&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面继续添加了 &lt;code class=&quot;language-text&quot;&gt;Person&lt;/code&gt; 的 &lt;code class=&quot;language-text&quot;&gt;prototype&lt;/code&gt; 属性，重新生成 &lt;code class=&quot;language-text&quot;&gt;person1&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;person2&lt;/code&gt; 两个实例对象后，发现两个实例对象都拥有一个共同的属性 &lt;code class=&quot;language-text&quot;&gt;country&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;所以总结上述，可得出以下结果：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;person1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__proto__ &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// true&lt;/span&gt;
person1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__proto__&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__proto__ &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__proto__ &lt;span class=&quot;token comment&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__proto__ &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype &lt;span class=&quot;token comment&quot;&gt;// true&lt;/span&gt;
person1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__proto__&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__proto__ &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype &lt;span class=&quot;token comment&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果想要知道实例对象的属性是否属于 &lt;code class=&quot;language-text&quot;&gt;prototype&lt;/code&gt;，可以使用 &lt;code class=&quot;language-text&quot;&gt;hasOwnProperty()&lt;/code&gt; 方法检查，用法见下例：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;person1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;hasOwnProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//true&lt;/span&gt;
person2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;hasOwnProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;gender&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//true&lt;/span&gt;
person1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;hasOwnProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;country&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从上例可看出，&lt;code class=&quot;language-text&quot;&gt;country&lt;/code&gt; 不是 &lt;code class=&quot;language-text&quot;&gt;person1&lt;/code&gt; 的自有属性，而是用过原型链向上级（&lt;code class=&quot;language-text&quot;&gt;Person.prototype&lt;/code&gt;）查找得到的，也就是继承的属性。&lt;/p&gt;
&lt;p&gt;需要注意的是，&lt;code class=&quot;language-text&quot;&gt;hasOwnProperty()&lt;/code&gt; 方法则是由最上层原型链（&lt;code class=&quot;language-text&quot;&gt;Object.prototype&lt;/code&gt;）查找得到的。&lt;/p&gt;
&lt;h3&gt;继承&lt;/h3&gt;
&lt;p&gt;普通原型链继承有几大缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原型方法代码必须放在替换原型的语句之后&lt;/li&gt;
&lt;li&gt;不能使用对象字面量创建原型方法，这样会改写原型链&lt;/li&gt;
&lt;li&gt;当只想给实例定义的属性，将会变成原型的属性，继承的属性会被子类实例共享&lt;/li&gt;
&lt;li&gt;在创建子类型的实例时，不能向超类型的构造函数中传递函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是几种原型链的继承方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;借用构造函数：也称经典继承。在子类型构造函数的内部调用超类型构造函数。 （&lt;code class=&quot;language-text&quot;&gt;call()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;apply()&lt;/code&gt;）这种方法解决了原型链的两个主要的问题，为了确保&lt;code class=&quot;language-text&quot;&gt;SuperType&lt;/code&gt; 构造函数不会重写子类型的属性,可以在调用超类型构造函数后,再添加应该在子类型中定义的属性。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SuperType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;colors &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;green&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SubType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token comment&quot;&gt;//继承了 SuperType 同时还传递了参数&lt;/span&gt;
 &lt;span class=&quot;token function&quot;&gt;SuperType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//注意引入方式&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; instance1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SubType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
instance1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;colors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;instance1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;colors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//&quot;red,blue,green,black&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; instance2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SubType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;instance2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;colors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//&quot;red,blue,green&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;instance2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;instance2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组合继承：也称伪经典继承。将原型链和借用构造函数糅合起来。思路是使用原型链实现对原型属性和方法的继承，而通过借用构造函数来实现对实例属性的继承。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SuperType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;colors &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;green&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;SuperType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;sayName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SubType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token comment&quot;&gt;//继承属性&lt;/span&gt;
 &lt;span class=&quot;token function&quot;&gt;SuperType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//继承方法&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;SubType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SuperType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;SubType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;constructor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; SubType&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;SubType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;sayAge&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; instance1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SubType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
instance1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;colors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;instance1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;colors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//&quot;red,blue,green,black&quot;&lt;/span&gt;
instance1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sayName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//&quot;Nicholas&quot;;&lt;/span&gt;
instance1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sayAge&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//29&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; instance2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SubType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Greg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;instance2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;colors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//&quot;red,blue,green&quot;&lt;/span&gt;
instance2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sayName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//&quot;Greg&quot;;&lt;/span&gt;
instance2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sayAge&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//27&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;參考鏈接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.techbridge.cc/2017/04/22/javascript-prototype/&quot;&gt;该来理解 JavaScript 的原型链了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/2&quot;&gt;JavaScript深入之从原型到原型链&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;一道面试题&lt;/h2&gt;
&lt;p&gt;在某乎上看到了一篇文章，代码如下：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;token comment&quot;&gt;// 认为的结果 实际的结果&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 5         5&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 0         5&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 1         5&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 2         5&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 3         5&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 4         5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当看到这道题的时候，认为的结果是：&lt;code class=&quot;language-text&quot;&gt;5-&amp;gt;0-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4&lt;/code&gt;，但实际琢磨完后却发现答案并不是，而是：&lt;code class=&quot;language-text&quot;&gt;5 -&amp;gt;5/5/5/5/5&lt;/code&gt; 。（首先输出5，其次同时输出五个5。）&lt;/p&gt;
&lt;p&gt;首先要清楚的是，先输出的是 &lt;code class=&quot;language-text&quot;&gt;console.log(new Date, i);&lt;/code&gt;。因为 &lt;code class=&quot;language-text&quot;&gt;for...&lt;/code&gt; 中设置了一个1秒钟的定时器，并会在随后输出。&lt;/p&gt;
&lt;p&gt;其次在 &lt;code class=&quot;language-text&quot;&gt;for&lt;/code&gt; 循环声明的五个&lt;code class=&quot;language-text&quot;&gt;setTimeout()&lt;/code&gt; 都有对变量 &lt;code class=&quot;language-text&quot;&gt;i&lt;/code&gt; 的&lt;strong&gt;引用&lt;/strong&gt;，而不是拷贝。（这里的引用不是引用类型的引用，而是 &lt;code class=&quot;language-text&quot;&gt;i&lt;/code&gt; 作为函数作用域链的一个变量，由于&lt;strong&gt;闭包&lt;/strong&gt;造成的）&lt;/p&gt;
&lt;p&gt;因为5个 &lt;code class=&quot;language-text&quot;&gt;setTimeout()&lt;/code&gt; 都涉及到延迟执行的情况，所以当主线程执行完后，Timeout这些回调依次执行（队列：FIFO），此时 &lt;code class=&quot;language-text&quot;&gt;i&lt;/code&gt; 的值已经为5。&lt;/p&gt;
&lt;p&gt;关于闭包的拓展阅读，请看&lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/9&quot;&gt;此篇&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;关于定时器的工作原理，详读&lt;a href=&quot;https://johnresig.com/blog/how-javascript-timers-work/&quot;&gt;此篇&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那如何稍作改变，输出 &lt;code class=&quot;language-text&quot;&gt;5-&amp;gt;0-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4&lt;/code&gt; 呢？&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;IIFE（声明即执行的函数表达式）&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// j = i&lt;/span&gt;
       &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
           console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用按值传递，拆分函数&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
       console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// i 从此处复制并传递&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可使用ES6语法， &lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt; 替代 &lt;code class=&quot;language-text&quot;&gt;var&lt;/code&gt;，但此方法并不全对&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
       console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 之后 i 值后将不存在&lt;/span&gt;

console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//无法执行，将会报错&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;那再做一些改变，输出 &lt;code class=&quot;language-text&quot;&gt;0-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5&lt;/code&gt; 呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最好还是使用 ES6 的 Promise 语法实现&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; tasks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 这里 i 的声明不能改成 let，如果要改该怎么做？&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        tasks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 这里一定要 resolve，否则代码不会按预期 work&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 定时器的超时时间逐步增加&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tasks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 注意这里只需要把超时设置为 1 秒&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下例是更加简洁的代码：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; tasks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 这里存放异步操作的 Promise&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// 生成全部的异步操作&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    tasks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// 异步操作完成之后，输出最后的 i&lt;/span&gt;
Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tasks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;參考理解：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000009711065&quot;&gt;详解前端网红经典面试题：setTimeout 与循环闭包&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25855075&quot;&gt;破解前端面试：从闭包说起&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[JavaScript 创建对象的几个方式]]></title><description><![CDATA[总结这几天啃高程（Javascript 高级程序设计）中看到的几个创建对象的方式，及其优缺点。 面向对象 ES 中有两种属性，分别为数据属性和访问器属性。 数据属性，包含数据值位置，可读取写入，含以下四个特性： [Configurable]：表示能否通过 delete…]]></description><link>https://blog.tocz9ea.com/js-ways-to-create-object/</link><guid isPermaLink="false">https://blog.tocz9ea.com/js-ways-to-create-object/</guid><pubDate>Mon, 30 Jul 2018 16:58:49 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;总结这几天啃高程（Javascript 高级程序设计）中看到的几个创建对象的方式，及其优缺点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;面向对象&lt;/h2&gt;
&lt;p&gt;ES 中有两种属性，分别为数据属性和访问器属性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据属性，包含数据值位置，可读取写入，含以下四个特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[[Configurable]]：表示&lt;strong&gt;能否通过 delete 删除属性从而重新定义&lt;/strong&gt;属性，能否修改属性的特性，或者能否把属性修改为访问器属性。像前面例子中那样直接在对象上定义的属性，默认值：&lt;code class=&quot;language-text&quot;&gt;true&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;[[Enumerable]]：表示&lt;strong&gt;能否通过 for-in 循环返回&lt;/strong&gt;属性。像前面例子中那样直接在对象上定义的属性，默认值：&lt;code class=&quot;language-text&quot;&gt;true&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;[[Writable]]：表示&lt;strong&gt;能否修改属性&lt;/strong&gt;的值。可直接在对象上定义属性，默认值：&lt;code class=&quot;language-text&quot;&gt;true&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;[[Value]]：包含这个属性的&lt;strong&gt;数据值&lt;/strong&gt;。读取属性值时，从这个位置读；写入属性值时，把新值保存在此，默认值：&lt;code class=&quot;language-text&quot;&gt;undefined&lt;/code&gt;。例：&lt;code class=&quot;language-text&quot;&gt;var person = { name: &amp;quot;Nick&amp;quot; };&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;[[Value]] = &amp;quot;Nick&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问器属性，不包含数据值，具有&lt;code class=&quot;language-text&quot;&gt;getter&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;setter&lt;/code&gt; 函数。分别作读取和写入时用，分别负责返回有效值和决定如何处理数据，具有四个属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[[Configurable]]：表示&lt;strong&gt;能否通过 delete 删除属性从而重新定义&lt;/strong&gt;属性，能否修改属性的特性，或者能否把属性修改为数据属性。对于直接在对象上定义的属性，这个特性的默认值：&lt;code class=&quot;language-text&quot;&gt;true&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;[[Enumerable]]：表示&lt;strong&gt;能否通过 for-in 循环返回&lt;/strong&gt;属性。对于直接在对象上定义的属性，这个特性的默认值：&lt;code class=&quot;language-text&quot;&gt;true&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;[[Get]]：在&lt;strong&gt;读取属性时调用&lt;/strong&gt;的函数。默认值：&lt;code class=&quot;language-text&quot;&gt;undefined&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;[[Set]]：在&lt;strong&gt;写入属性时调用&lt;/strong&gt;的函数。默认值：&lt;code class=&quot;language-text&quot;&gt;undefined&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;访问器属性，必须用&lt;code class=&quot;language-text&quot;&gt;Object.defineProperty()&lt;/code&gt; 定义；数据属性的默认值，也需要使用前者的函数来定义。定义多属性，在 ES5 中可以使用&lt;code class=&quot;language-text&quot;&gt;Object.defineProperties()&lt;/code&gt; 方法。读取属性，可以使用&lt;code class=&quot;language-text&quot;&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; 方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;工厂模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;函数封装对象所有细节，但每次调用此类函数，均返回函数内所有属性和方法&lt;/li&gt;
&lt;li&gt;解决创建多个相似对象的问题&lt;/li&gt;
&lt;li&gt;没有解决对象识别问题（如何知道对象的类型？）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createPerson&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; job&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; o &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;job &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; job&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;sayName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; person1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createPerson&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Software Engineer&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; person2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createPerson&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Greg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Doctor&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;构造函数模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;函数内不用 &lt;code class=&quot;language-text&quot;&gt;new&lt;/code&gt; 显式创建对象；属性方法直接赋值于 &lt;code class=&quot;language-text&quot;&gt;this&lt;/code&gt;；无 &lt;code class=&quot;language-text&quot;&gt;return&lt;/code&gt; 语句&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;this&lt;/code&gt; 巨坑，建议与原型模式组合使用&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用时四步骤&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建新对象&lt;/li&gt;
&lt;li&gt;作用域赋值于新对象&lt;/li&gt;
&lt;li&gt;执行函数代码（新对象添加属性）&lt;/li&gt;
&lt;li&gt;返回新对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; job&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;job &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; job&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;sayName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; person1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Software Engineer&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; person2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Greg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Doctor&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;原型模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;利用函数中特有的&lt;code class=&quot;language-text&quot;&gt;prototype&lt;/code&gt; 属性，它是一个指针，指向一个对象。对象包含特定类型的所有实例共享属性及方法&lt;/li&gt;
&lt;li&gt;需要区别单一赋值和属性赋值的区别。（有无 &lt;code class=&quot;language-text&quot;&gt;constructor&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关于原型链，翻阅此&lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/2&quot;&gt;链接&lt;/a&gt;了解详情&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;job &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Software Engineer&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;sayName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;组合使用构造函数模式和原型模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;构造函数模式用于定义实例属性，而原型模式用于定义方法和共享的属性&lt;/li&gt;
&lt;li&gt;每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度地节省了内存&lt;/li&gt;
&lt;li&gt;支持向构造函数传递参数；是用来定义引用类型的一种默认模式&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; job&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;job &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; job&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  constructor &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Person&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token function-variable function&quot;&gt;sayName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;动态原型模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;将所有信息封装至构造函数中，在其中初始化原型&lt;/li&gt;
&lt;li&gt;保持了同时使用构造函数和原型的优点&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; job&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;job &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; job&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;//方法&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sayName &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;function&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;sayName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;寄生构造函数模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;函数写法同工厂模式相同&lt;/li&gt;
&lt;li&gt;使用 &lt;code class=&quot;language-text&quot;&gt;new&lt;/code&gt; ，把使用的包装函数叫做构造函数&lt;/li&gt;
&lt;li&gt;构造函数在不返回值的情况下，默认返回新对象实例&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; job&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; o &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;job &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; job&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;sayName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; friend &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Software Engineer&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;稳妥构造函数模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;稳妥对象：没有公共属性，方法不应用 &lt;code class=&quot;language-text&quot;&gt;this&lt;/code&gt; 的对象&lt;/li&gt;
&lt;li&gt;适合在一些安全环境中，或者在防止数据被其他应用程序改动时使用&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;遵循与寄生构造函数类似的模式，但有两点不同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新创建对象的实例方法不引用 &lt;code class=&quot;language-text&quot;&gt;this&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不使用 &lt;code class=&quot;language-text&quot;&gt;new&lt;/code&gt; 操作符调用构造函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; job&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; o &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;//可以在这里定义私有变量和函数&lt;/span&gt;
  o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;sayName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; friend &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Software Engineer&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上例中，除了调用 &lt;code class=&quot;language-text&quot;&gt;sayName()&lt;/code&gt; 方法外，没有其他方式能够访问其数据成员。&lt;/p&gt;
&lt;h2&gt;Class (ES6)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ES6 引入此概念，作为对象的模板。可以看作只是一个语法糖。&lt;/li&gt;
&lt;li&gt;class 写法只是让对象原型写法更加清晰，更像面向对象编程的语法。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; job&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;job &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; job&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;sayName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; friend &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Software Engineer&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;当 &lt;code class=&quot;language-text&quot;&gt;t​​ypeof&lt;/code&gt; 某个 class 的时候，结果为 function，可以看作构造函数的另一种写法。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt; Person &lt;span class=&quot;token comment&quot;&gt;// &quot;function&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;prototype 对象的 constructor 属性，直接指向 class 本身，与 ES5 行为一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;constructor &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; Person &lt;span class=&quot;token comment&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;class 内部所有定义的方法，均不可枚举[[Enumerable]]，下例中的 &lt;code class=&quot;language-text&quot;&gt;sayName&lt;/code&gt; 方法为内部定义方法，不可枚举，与 ES5 的行为不一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// []&lt;/span&gt;
Object&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getOwnPropertyNames&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// [&quot;constructor&quot;,&quot;sayName&quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Config ArchiSteamFarm and Saliens script]]></title><description><![CDATA[万恶的 G 胖向玩家伸出了魔爪，而我并没有想要喜加一的意思，而是搞起了收集卡牌的行当。 除了每日探索队列的三张卡牌，这次夏促还出了一款小游戏 - Saliens。为了拿满级徽章，自己的电脑在 2…]]></description><link>https://blog.tocz9ea.com/asf-saliens-configurations/</link><guid isPermaLink="false">https://blog.tocz9ea.com/asf-saliens-configurations/</guid><pubDate>Thu, 28 Jun 2018 16:44:28 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;万恶的 G 胖向玩家伸出了魔爪，而我并没有想要喜加一的意思，而是搞起了收集卡牌的行当。&lt;/p&gt;
&lt;p&gt;除了每日探索队列的三张卡牌，这次夏促还出了一款小游戏 - Saliens。为了拿满级徽章，自己的电脑在 24 小时不停地运转，但过了几天发现可以将这个脚本放在服务器上，就开始了搞事之旅。&lt;/p&gt;
&lt;p&gt;本来早就应该写完的，结果因为期末考而一拖再拖。夏促早已结束，就算是把 Linux 常用软件温习一遍吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018062800.jpg&quot; alt style=&quot;width:100%&quot;&gt;
&lt;!-- {% meting &quot;29043756&quot; &quot;netease&quot; &quot;song&quot; %} --&gt;
&lt;h2&gt;preparation and install packages&lt;/h2&gt;
&lt;p&gt;The following packages you need to install, please ensure all the command should be under super user’s permission.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;tmux&lt;/li&gt;
&lt;li&gt;.NET SDK 2.1&lt;/li&gt;
&lt;li&gt;python 3.6&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;tmux&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;yum &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -y tmux&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;.NET SDK 2.1&lt;/h3&gt;
&lt;p&gt;For more details, please visit the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore2x&quot;&gt;Official page&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# add the dotnet product feed&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;rpm&lt;/span&gt; -Uvh https://packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpm

&lt;span class=&quot;token comment&quot;&gt;# update, install required things and .NET SDK&lt;/span&gt;
yum update
yum &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; libunwind libicu
yum &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; dotnet-sdk-2.1

&lt;span class=&quot;token comment&quot;&gt;# check .NET SDK version&lt;/span&gt;
dotnet --version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;python 3.6&lt;/h3&gt;
&lt;p&gt;Please make sure all system packages are updated.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-centos-7&quot;&gt;DigitalOcean Page&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# install yum-utils and development tools&lt;/span&gt;
yum -y &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; yum-utils
yum -y groupinstall development

&lt;span class=&quot;token comment&quot;&gt;# install and setup python3&lt;/span&gt;
yum -y &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; https://centos7.iuscommunity.org/ius-release.rpm
yum -y &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; python36u

&lt;span class=&quot;token comment&quot;&gt;# check python3 version&lt;/span&gt;
python3.6 -V

&lt;span class=&quot;token comment&quot;&gt;# don&apos;t forget to install pip3 and devel&lt;/span&gt;
yum -y &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; python36u-pip
yum -y &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; python36u-devel

&lt;span class=&quot;token comment&quot;&gt;# so if want to install python3 package, use this:&lt;/span&gt;
pip3.6 &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;package_name&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;download and setup ASF&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create asf folder, setting dir’s permission.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; ~/asf
&lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; +x asf
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; ~/asf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Go to ASF’s repo &lt;a href=&quot;https://github.com/JustArchi/ArchiSteamFarm/releases/latest&quot;&gt;releases page&lt;/a&gt;, download &lt;code class=&quot;language-text&quot;&gt;ASF-generic.zip&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://github.com/JustArchi/ArchiSteamFarm/releases/download/3.1.0.0/ASF-generic.zip
&lt;span class=&quot;token function&quot;&gt;unzip&lt;/span&gt; ASF-generic.zip
&lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; ASF-generic.zip
&lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; +x ArchiSteamFarm.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Don’t forget to set the &lt;code class=&quot;language-text&quot;&gt;CurrentCulture&lt;/code&gt; in &lt;code class=&quot;language-text&quot;&gt;config&lt;/code&gt; folder, and upload &lt;code class=&quot;language-text&quot;&gt;.json&lt;/code&gt; file to the server. (also upload to &lt;code class=&quot;language-text&quot;&gt;config&lt;/code&gt; folder) &lt;/li&gt;
&lt;li&gt;Run ASF.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;~/asf/ArchiSteamFarm.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;steamcommunity error&lt;/h3&gt;
&lt;p&gt;You can get steam ip from cloudflare by this following URL, and get data from the downloaded &lt;code class=&quot;language-text&quot;&gt;.json&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cloudflare-dns.com/dns-query?ct=application/dns-json&amp;#x26;name=steamcommunity.com&amp;#x26;type=A&quot;&gt;https://cloudflare-dns.com/dns-query?ct=application/dns-json&amp;#x26;name=steamcommunity.com&amp;#x26;type=A&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then edit system hosts file (/etc/hosts).&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;xxx.xxx.xxx.xxx steamcommunity.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;download and setup saliens script&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Enter &lt;a href=&quot;https://github.com/sffxzzp/Steam-2018-SummerGame&quot;&gt;Github Page&lt;/a&gt;, get the download link.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone https://github.com/sffxzzp/Steam-2018-SummerGame.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Config Steam account data, and run the script.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;python3.6 saliens.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[ISF2018 Fujian WriteUp]]></title><description><![CDATA[赛题 比赛方在赛前会给每只队伍一个含有加密压缩档的U盘，压缩档大小。比赛开始后公布解压密码后开始答题，解压后共有9个文件，答题界面出现题目。下面是所有题目信息，但在比赛时只会显示题目简介和第一题，需要在答对或五次错误或申请跳过（之后两种情况，每题扣1…]]></description><link>https://blog.tocz9ea.com/isf2018-fujian-writeup/</link><guid isPermaLink="false">https://blog.tocz9ea.com/isf2018-fujian-writeup/</guid><pubDate>Sun, 13 May 2018 23:31:08 GMT</pubDate><content:encoded>&lt;h2&gt;赛题&lt;/h2&gt;
&lt;p&gt;比赛方在赛前会给每只队伍一个含有加密压缩档的U盘，压缩档大小&lt;code class=&quot;language-text&quot;&gt;1.84 GB&lt;/code&gt;。比赛开始后公布解压密码后开始答题，解压后共有9个&lt;code class=&quot;language-text&quot;&gt;.pcapng&lt;/code&gt;文件，答题界面出现题目。&lt;strong&gt;下面是所有题目信息&lt;/strong&gt;，但在比赛时只会显示题目简介和第一题，需要在答对或五次错误或申请跳过（之后两种情况，每题扣10分）后显示下一题。&lt;/p&gt;
&lt;p&gt;赛题包：&lt;a href=&quot;https://drive.google.com/drive/folders/1NDxd0oqlno6RCJl7Y1sJQFLanQ97N7ht&quot;&gt;Google Drive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;黑客发现了公司网站服务器上的漏洞，通过利用漏洞成功获取了服务器权限，对内网进行了扫描和攻击。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;网站后台密码是？&lt;/li&gt;
&lt;li&gt;攻击者的 IP 是？&lt;/li&gt;
&lt;li&gt;网站后台登陆地址是？ （http:// + IP + 路径）&lt;/li&gt;
&lt;li&gt;后台写入的 WebShell 内容是？&lt;/li&gt;
&lt;li&gt;网站数据库密码是？&lt;/li&gt;
&lt;li&gt;黑客上传&lt;code class=&quot;language-text&quot;&gt;shell2.php&lt;/code&gt;后的第一个文件是？&lt;/li&gt;
&lt;li&gt;黑客对内网扫描的IP范围是？ （IP1 + IP2）&lt;/li&gt;
&lt;li&gt;黑客下载的数据库备份文件名是？&lt;/li&gt;
&lt;li&gt;黑客上床的图马密码是？&lt;/li&gt;
&lt;li&gt;黑客修改了哪个文件来配合木马文件？ （绝对路径）&lt;/li&gt;
&lt;li&gt;FTP服务器的端口是？&lt;/li&gt;
&lt;li&gt;黑客使用 FTP 上传的文件名？&lt;/li&gt;
&lt;li&gt;黑客登陆 FTP 的密码是？&lt;/li&gt;
&lt;li&gt;黑客使用 FTP 上传的文件，其内容是？&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;解题&lt;/h2&gt;
&lt;h3&gt;网站后台密码是？&lt;/h3&gt;
&lt;p&gt;首先打开&lt;code class=&quot;language-text&quot;&gt;data-sence2_00001_20180204175222.pcapng&lt;/code&gt;。看到“网站后台密码”关键词，下意识先在过滤框中输入&lt;code class=&quot;language-text&quot;&gt;http&lt;/code&gt;查看HTTP 传输数据，逛了一圈发现攻击方先是在扫描目录，最后尝试在&lt;code class=&quot;language-text&quot;&gt;/ad_admin.php?mod=login&lt;/code&gt;进行爆破。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051301.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;接着打开&lt;code class=&quot;language-text&quot;&gt;data-sence2_00002_20180204175222.pcapng&lt;/code&gt;，过滤仅查看 HTTP 数据，在末尾几处发现对&lt;code class=&quot;language-text&quot;&gt;/ad_admin.php?mod=login&lt;/code&gt; 进行登陆处理后，依次 GET &lt;code class=&quot;language-text&quot;&gt;ad_admin.php?mod=homepage&amp;amp;loginprompt=&lt;/code&gt; 和&lt;code class=&quot;language-text&quot;&gt;ad_admin.php?mod=mainset&lt;/code&gt;，说明登陆成功。此时在 Cookie 中留有 &lt;code class=&quot;language-text&quot;&gt;dpadmin_password&lt;/code&gt; 字段，将其值放入 CMD5 中可得此题答案：&lt;code class=&quot;language-text&quot;&gt;aabbcc&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051302.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051303.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;攻击者的 IP 是？&lt;/h3&gt;
&lt;p&gt;分析上题中的两个数据包，在过滤后仅查看 HTTP 请求后，可以很明显的发现攻击方IP：&lt;code class=&quot;language-text&quot;&gt;202.1.1.2&lt;/code&gt;，智商检测题。&lt;/p&gt;
&lt;h3&gt;网站后台登陆地址是？ （http:// + IP + 路径）&lt;/h3&gt;
&lt;p&gt;分析第一题后应该能知道，网站的后台登陆地址是：&lt;code class=&quot;language-text&quot;&gt;http://192.168.1.203/ad_admin.php&lt;/code&gt;，也是智商检测题。&lt;/p&gt;
&lt;h3&gt;后台写入的 WebShell 内容是？&lt;/h3&gt;
&lt;p&gt;打开第三个数据包 &lt;code class=&quot;language-text&quot;&gt;data-sence2_00003_20180204175222.pcapng&lt;/code&gt;，同样也是过滤仅查看 HTTP
请求，同时将 Source 列按顺序排列后，从该列的&lt;code class=&quot;language-text&quot;&gt;202.1.1.2&lt;/code&gt; 开始，第二行里包含着一段 base64，解码后可以知道WebShell的内容是：&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?php eval($_POST[&amp;#39; cmd&amp;#39;]);?&amp;gt;&lt;/code&gt;（记得去掉反斜杠）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051304.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051305.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;网站数据库密码是？&lt;/h3&gt;
&lt;p&gt;还是在第三个数据包中，攻击方在将 WebShell 文件&lt;code class=&quot;language-text&quot;&gt;shell2.php&lt;/code&gt; 上传后，进行了一系列的 POST 操作，在返回的 HTML 文件中就可以找到攻击方请求获取数据库的所有信息，包括数据库密码：&lt;code class=&quot;language-text&quot;&gt;newnrtpassword&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051306.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;黑客上传 &lt;code class=&quot;language-text&quot;&gt;shell2.php&lt;/code&gt; 后的第一个文件是？&lt;/h3&gt;
&lt;p&gt;这题问的是文件，就尝试在第三个和第四个包中直接导出 HTTP 对象后，没有发现有价值的线索。期间一直怀疑自己的思路有问题，但打开第五个数据包后，找到了答案：&lt;code class=&quot;language-text&quot;&gt;scan.php&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051307.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;黑客对内网扫描的 IP 范围是？（IP1 + IP2）&lt;/h3&gt;
&lt;p&gt;依着上一题的思路，在点选导出的 &lt;code class=&quot;language-text&quot;&gt;scan.php&lt;/code&gt; 中，看到了这一题的答案：&lt;code class=&quot;language-text&quot;&gt;192.168.2.1 - 192.168.2.150&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051308.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;黑客下载的数据库备份文件名是？&lt;/h3&gt;
&lt;p&gt;这题同样问的是文件，也使用直接导出 HTTP 对象的方法查找，但第五个包已经没有符合条件的文件了，遂打开第六个数据包，对 &lt;code class=&quot;language-text&quot;&gt;Hostname&lt;/code&gt; 进行分类后，找到了相像的文件 &lt;code class=&quot;language-text&quot;&gt;bak_2018-01-29-17-47-52.zip&lt;/code&gt;，输入答题框中显示正确。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051309.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;黑客上床的图马密码是？&lt;/h3&gt;
&lt;p&gt;接下来打开第七个数据包，又是过滤仅查看 HTTP 请求。在第一行中就给出了答案。&lt;/p&gt;
&lt;p&gt;其实是 &lt;code class=&quot;language-text&quot;&gt;shell2.php&lt;/code&gt; POST 了一段数据，将其中 &lt;code class=&quot;language-text&quot;&gt;z1&lt;/code&gt; 字段的值放入HEX编辑器中，显示了一句话代码，其中的 &lt;code class=&quot;language-text&quot;&gt;picto&lt;/code&gt; 就是本题答案。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051310.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051311.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;黑客修改了哪个文件来配合木马文件？（绝对路径）&lt;/h3&gt;
&lt;p&gt;继续分析第七个数据包，查看了第九题下方的几个请求和返回值，看到其中有一个貌似是 &lt;code class=&quot;language-text&quot;&gt;ls&lt;/code&gt; 了一个目录，随后往下翻阅并和后续 &lt;code class=&quot;language-text&quot;&gt;ls&lt;/code&gt; 后的结果进行对比，知道了黑客修改的文件是 &lt;code class=&quot;language-text&quot;&gt;obj_edit.php&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051312.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051313.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;FTP服务器的端口是？&lt;/h3&gt;
&lt;p&gt;在第七个数据包后面发现了新的 &lt;code class=&quot;language-text&quot;&gt;tunnel.php&lt;/code&gt;，猜测可能是用来进行代理并和端口有关的木马文件，在导出 HTTP 对象的时候找到一个 12Kb 的文件，点击定位后同样将&lt;code class=&quot;language-text&quot;&gt;z1&lt;/code&gt; 字段的值放入HEX编辑器中，再将转换后的值贴入 Sublime Text 中。分析代码，看见了如下语句，大概说的就是把连接成功后的端口放在 Header 的 &lt;code class=&quot;language-text&quot;&gt;X-PORT&lt;/code&gt; 中。&lt;/p&gt;
&lt;p&gt;随后在第八个数据包中查找有关 &lt;code class=&quot;language-text&quot;&gt;tunnel.php&lt;/code&gt; 的有关请求，最后发现了第 395467 行的请求，在 Header 中可见其 &lt;code class=&quot;language-text&quot;&gt;X-PORT&lt;/code&gt; 为 1433，就为该题答案。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051314.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051315.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051316.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051317.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051318.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;黑客使用 FTP 上传的文件名？&lt;/h3&gt;
&lt;p&gt;按上一题的 FTP 端口号，在设置中将 FTP 端口号改为 1433，随后再过滤仅查看 FTP 请求就能找到上传了一个名为 &lt;code class=&quot;language-text&quot;&gt;readmd.rtf&lt;/code&gt; 文件，为正确答案。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051319.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051320.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;黑客登陆 FTP 的密码是？&lt;/h3&gt;
&lt;p&gt;在上一题的上方，就能找到答案：&lt;code class=&quot;language-text&quot;&gt;qweasd123!@#&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051321.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;黑客使用 FTP 上传的文件，其内容是？&lt;/h3&gt;
&lt;p&gt;过滤仅查看 &lt;code class=&quot;language-text&quot;&gt;ftp-data&lt;/code&gt; 请求，就能查看 &lt;code class=&quot;language-text&quot;&gt;readmd.rtf&lt;/code&gt; 文件的内容了：&lt;code class=&quot;language-text&quot;&gt;CVE-2017-8570&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog-tocz9ea.test.upcdn.net/img/2018051322.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;本次比赛的数据赛赛题是连贯的，攻击者的思路从此可以较为完整地分析，也让我学会了不少，这也是这次想写 WriteUp 的原因之一吧。在做题过程中，有些题目并不是一开始就很顺利，这次写出来也让我重新整理了下解题思路和解题方式。&lt;/p&gt;
&lt;p&gt;毕竟不是专业学习网安的，在分析方面如有欠缺，也请多多指教。&lt;/p&gt;</content:encoded></item></channel></rss>