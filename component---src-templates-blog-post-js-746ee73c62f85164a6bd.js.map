{"version":3,"sources":["webpack:///./src/components/Valine.js","webpack:///./src/templates/blog-post.js"],"names":["Valine","props","defaultOptions","appId","appKey","rootRef","useRef","useEffect","current","then","RealValine","default","el","ref","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","path","pathname","avatar","pageQuery"],"mappings":"2FAAA,2DAEe,SAASA,EAAQC,GAC9B,IAAMC,EAAiB,CACrBC,MAAM,oCACNC,OAAO,4BAGHC,EAAUC,mBAchB,OAZAC,qBAAU,WACJF,EAAQG,SACV,4DAAiBC,MAAK,aACpBC,EADiD,EAA1BC,SACZ,OAAD,QACRC,GAAIP,EAAQG,SACTN,EACAD,SAIR,CAACI,IAEG,yBAAKQ,IAAKR,M,kCCtBnB,kJA0FeS,UA9EU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGfd,EAAKQ,YAAYH,OAEpB,uBACEM,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGtBb,EAAKQ,YAAYS,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQnB,EAAKoB,QACjD,wBACET,MAAO,CACLG,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLK,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGlB,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAASoB,OAAOC,KAAMC,IAAI,QAApC,KACKtB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMkB,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,QAC7BrB,EAAKC,YAAYH,MADpB,SAQR,kBAAC,IAAD,CACEwB,KAAM9B,EAAS+B,SAEfC,OAAO,eAQR,IAAMC,EAAS","file":"component---src-templates-blog-post-js-746ee73c62f85164a6bd.js","sourcesContent":["import React, { useRef, useEffect } from \"react\"\n\nexport default function Valine (props) {\n  const defaultOptions = {\n    appId: `KNdvK7kVT5sjgqgBISs7E2d4-MdYXbMMI`,\n    appKey: `qrPYTPwNYncSTbPy7MT5mw9r`,\n  }\n\n  const rootRef = useRef()\n\n  useEffect(() => {\n    if (rootRef.current) {\n      import(\"valine\").then(({ default: RealValine }) => {\n        RealValine({\n          el: rootRef.current,\n          ...defaultOptions,\n          ...props,\n        })\n      })\n    }\n  }, [rootRef])\n\n  return <div ref={rootRef}></div>\n}\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n// import Valine from 'gatsby-plugin-valine'\n\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport Valine from '../components/Valine'\nimport { rhythm, scale } from \"../utils/typography\"\n\n\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n\n      <Valine\n        path={location.pathname}\n        // visitor=\"true\"\n        avatar=\"robohash\"\n      />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}